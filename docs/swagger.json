{
    "swagger": "2.0",
    "info": {
        "description": "goDevmans API",
        "title": "goDevmanAPI",
        "contact": {
            "name": "API Support",
            "email": "marko@aretaja.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v0.0.1-devel.1"
    },
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Welcome message",
                "tags": [
                    "information"
                ],
                "summary": "Welcome",
                "operationId": "root",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/interfaces": {
            "get": {
                "description": "List archived interfaces info",
                "tags": [
                    "archived"
                ],
                "summary": "List archived_interfaces",
                "operationId": "list-archived_interfaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'LIKE' operator pattern",
                        "name": "ifindex_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "hostname_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "alias_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "host_ip4_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "host_ip6_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SQL '=' operator value (MAC address)",
                        "name": "mac_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.archivedInterface"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create archived interface",
                "tags": [
                    "archived"
                ],
                "summary": "Create archived_interface",
                "operationId": "create-archived_interface",
                "parameters": [
                    {
                        "description": "JSON object of archivedInterface.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003eifa_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedInterface"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedInterface"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/interfaces/count": {
            "get": {
                "description": "Count number of archived interfaces",
                "tags": [
                    "archived"
                ],
                "summary": "Count archived_interfaces",
                "operationId": "count-archived_interfaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/interfaces/{ifa_id}": {
            "get": {
                "description": "Get archived interface info",
                "tags": [
                    "archived"
                ],
                "summary": "Get archived_interface",
                "operationId": "get-archived_interface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ifa_id",
                        "name": "ifa_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedInterface"
                        }
                    },
                    "400": {
                        "description": "Invalid ifa_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Archived interface not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update archived interface",
                "tags": [
                    "archived"
                ],
                "summary": "Update archived_interface",
                "operationId": "update-archived_interface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ifa_id",
                        "name": "ifa_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of archivedInterface.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003eifa_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedInterface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedInterface"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete archived interface",
                "tags": [
                    "archived"
                ],
                "summary": "Delete archived_interface",
                "operationId": "delete-archived_interface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ifa_id",
                        "name": "ifa_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ifa_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/subinterfaces": {
            "get": {
                "description": "List archived subinterfaces info",
                "tags": [
                    "archived"
                ],
                "summary": "List archived_subinterfaces",
                "operationId": "list-archived_subinterfaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'LIKE' operator pattern",
                        "name": "ifindex_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "hostname_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "alias_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "host_ip4_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "host_ip6_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SQL '=' operator value (MAC address)",
                        "name": "mac_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.archivedSubinterface"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create archived subinterface",
                "tags": [
                    "archived"
                ],
                "summary": "Create archived_subinterface",
                "operationId": "create-archived_subinterface",
                "parameters": [
                    {
                        "description": "JSON object of archivedSubinterface.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003esifa_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedSubinterface"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedSubinterface"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/subinterfaces/count": {
            "get": {
                "description": "Count number of archived subinterfaces",
                "tags": [
                    "archived"
                ],
                "summary": "Count archived_subinterfaces",
                "operationId": "count-archived_subinterfaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/archived/subinterfaces/{sifa_id}": {
            "get": {
                "description": "Get archived subinterface info",
                "tags": [
                    "archived"
                ],
                "summary": "Get archived_subinterface",
                "operationId": "get-archived_subinterface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sifa_id",
                        "name": "sifa_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedSubinterface"
                        }
                    },
                    "400": {
                        "description": "Invalid sifa_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Archived subinterface not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update archived subinterface",
                "tags": [
                    "archived"
                ],
                "summary": "Update archived_subinterface",
                "operationId": "update-archived_subinterface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sifa_id",
                        "name": "sifa_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of archivedSubinterface.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003esifa_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedSubinterface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.archivedSubinterface"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete archived subinterface",
                "tags": [
                    "archived"
                ],
                "summary": "Delete archived_subinterface",
                "operationId": "delete-archived_subinterface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sifa_id",
                        "name": "sifa_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid sifa_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections": {
            "get": {
                "description": "List connection info",
                "tags": [
                    "connections"
                ],
                "summary": "List connections",
                "operationId": "list-connections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "hint_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Connection"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create connection",
                "tags": [
                    "connections"
                ],
                "summary": "Create connection",
                "operationId": "create-connection",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateConnectionParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateConnectionParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Connection"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/capacities": {
            "get": {
                "description": "List connection capacities info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_capacities",
                "operationId": "list-con_capacities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.ConCapacity"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create connection capacity",
                "tags": [
                    "connections"
                ],
                "summary": "Create capacity",
                "operationId": "create-capacity",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateConCapacityParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateConCapacityParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConCapacity"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/capacities/count": {
            "get": {
                "description": "Count number of connection capacities",
                "tags": [
                    "connections"
                ],
                "summary": "Count con_capacities",
                "operationId": "count-con_capacities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/capacities/{con_cap_id}": {
            "get": {
                "description": "Get connection capacity info",
                "tags": [
                    "connections"
                ],
                "summary": "Get capacity",
                "operationId": "get-capacity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_cap_id",
                        "name": "con_cap_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConCapacity"
                        }
                    },
                    "400": {
                        "description": "Invalid con_cap_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Capacity not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update connection capacity",
                "tags": [
                    "connections"
                ],
                "summary": "Update capacity",
                "operationId": "update-capacity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_cap_id",
                        "name": "con_cap_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateConCapacityParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003econ_cap_id\u003c/li\u003e/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateConCapacityParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConCapacity"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete connection capacity",
                "tags": [
                    "connections"
                ],
                "summary": "Delete capacity",
                "operationId": "delete-capacity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_cap_id",
                        "name": "con_cap_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid con_cap_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/capacities/{con_cap_id}/connections": {
            "get": {
                "description": "List connection capacity connections info",
                "tags": [
                    "connections"
                ],
                "summary": "List capacity connections",
                "operationId": "list-capacity-connections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_cap_id",
                        "name": "con_cap_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Connection"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid con_cap_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/classes": {
            "get": {
                "description": "List connection classes info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_classes",
                "operationId": "list-con_classes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.ConClass"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create connection class",
                "tags": [
                    "connections"
                ],
                "summary": "Create con_class",
                "operationId": "create-con_class",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateConClassParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateConClassParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/classes/count": {
            "get": {
                "description": "Count number of connection classes",
                "tags": [
                    "connections"
                ],
                "summary": "Count con_classes",
                "operationId": "count-con_classes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/classes/{con_class_id}": {
            "get": {
                "description": "Get connection class info",
                "tags": [
                    "connections"
                ],
                "summary": "Get con_class",
                "operationId": "get-con_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_class_id",
                        "name": "con_class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConClass"
                        }
                    },
                    "400": {
                        "description": "Invalid con_class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Class not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update connection class",
                "tags": [
                    "connections"
                ],
                "summary": "Update con_class",
                "operationId": "update-con_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_class_id",
                        "name": "con_class_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateConClassParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003econ_class_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateConClassParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete connection class",
                "tags": [
                    "connections"
                ],
                "summary": "Delete con_class",
                "operationId": "delete-con_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_class_id",
                        "name": "con_class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid con_class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/classes/{con_class_id}/connections": {
            "get": {
                "description": "List connection class connections info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_class connections",
                "operationId": "list-con_class-connections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_class_id",
                        "name": "con_class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Connection"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid con_class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/count": {
            "get": {
                "description": "Count number of connections",
                "tags": [
                    "connections"
                ],
                "summary": "Count connections",
                "operationId": "count-connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/providers": {
            "get": {
                "description": "List connection providers info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_providers",
                "operationId": "list-con_providers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.ConProvider"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create connection provider",
                "tags": [
                    "connections"
                ],
                "summary": "Create con_provider",
                "operationId": "create-con_provider",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateConProviderParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateConProviderParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/providers/count": {
            "get": {
                "description": "Count number of connection providers",
                "tags": [
                    "connections"
                ],
                "summary": "Count con_providers",
                "operationId": "count-con_providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/providers/{con_prov_id}": {
            "get": {
                "description": "Get connection provider info",
                "tags": [
                    "connections"
                ],
                "summary": "Get con_provider",
                "operationId": "get-con_provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_prov_id",
                        "name": "con_prov_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid con_prov_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update connection provider",
                "tags": [
                    "connections"
                ],
                "summary": "Update con_provider",
                "operationId": "update-con_provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_prov_id",
                        "name": "con_prov_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateConProviderParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003econ_prov_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateConProviderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete connection provider",
                "tags": [
                    "connections"
                ],
                "summary": "Delete con_provider",
                "operationId": "delete-con_provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_prov_id",
                        "name": "con_prov_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid con_prov_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/providers/{con_prov_id}/connections": {
            "get": {
                "description": "List connection provider connections info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_provider connections",
                "operationId": "list-con_provider-connections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_prov_id",
                        "name": "con_prov_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Connection"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid con_prov_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/types": {
            "get": {
                "description": "List connection types info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_types",
                "operationId": "list-con_types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.ConType"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create connection type",
                "tags": [
                    "connections"
                ],
                "summary": "Create con_type",
                "operationId": "create-con_type",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateConTypeParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateConTypeParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConType"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/types/count": {
            "get": {
                "description": "Count number of connection types",
                "tags": [
                    "connections"
                ],
                "summary": "Count con_types",
                "operationId": "count-con_types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/types/{con_type_id}": {
            "get": {
                "description": "Get connection type info",
                "tags": [
                    "connections"
                ],
                "summary": "Get con_type",
                "operationId": "get-con_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_type_id",
                        "name": "con_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConType"
                        }
                    },
                    "400": {
                        "description": "Invalid con_type_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Type not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update connection type",
                "tags": [
                    "connections"
                ],
                "summary": "Update con_type",
                "operationId": "update-con_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_type_id",
                        "name": "con_type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateConTypeParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003econ_type_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateConTypeParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConType"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete connection type",
                "tags": [
                    "connections"
                ],
                "summary": "Delete con_type",
                "operationId": "delete-con_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_type_id",
                        "name": "con_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid con_type_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/types/{con_type_id}/connections": {
            "get": {
                "description": "List connection type connections info",
                "tags": [
                    "connections"
                ],
                "summary": "List con_type connections",
                "operationId": "list-con_type-connections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_type_id",
                        "name": "con_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Connection"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid con_type_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/{con_id}": {
            "get": {
                "description": "Get connection info",
                "tags": [
                    "connections"
                ],
                "summary": "Get connection",
                "operationId": "get-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Connection"
                        }
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Connection not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update connection",
                "tags": [
                    "connections"
                ],
                "summary": "Update connection",
                "operationId": "update-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateConnectionParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003econ_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateConnectionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Connection"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete connection",
                "tags": [
                    "connections"
                ],
                "summary": "Delete connection",
                "operationId": "delete-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/{con_id}/capacity": {
            "get": {
                "description": "Get connection capacity info",
                "tags": [
                    "connections"
                ],
                "summary": "Get connection capacity",
                "operationId": "get-connection-capacity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConCapacity"
                        }
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/{con_id}/class": {
            "get": {
                "description": "Get connection class info",
                "tags": [
                    "connections"
                ],
                "summary": "Get connection class",
                "operationId": "get-connection-class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConClass"
                        }
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/{con_id}/provider": {
            "get": {
                "description": "Get connection provider info",
                "tags": [
                    "connections"
                ],
                "summary": "Get connection provider",
                "operationId": "get-connection-provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/connections/{con_id}/type": {
            "get": {
                "description": "Get connection type info",
                "tags": [
                    "connections"
                ],
                "summary": "Get connection type",
                "operationId": "get-connection-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "con_id",
                        "name": "con_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.ConType"
                        }
                    },
                    "400": {
                        "description": "Invalid con_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/credentials": {
            "get": {
                "description": "List credentials info",
                "tags": [
                    "data"
                ],
                "summary": "List credentials",
                "operationId": "list-credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "label_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Credential"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create credential",
                "tags": [
                    "data"
                ],
                "summary": "Create credential",
                "operationId": "create-credential",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateCredentialParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateCredentialParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Credential"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/credentials/count": {
            "get": {
                "description": "Count number of credentials",
                "tags": [
                    "data"
                ],
                "summary": "Count credentials",
                "operationId": "count-credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/credentials/{cred_id}": {
            "get": {
                "description": "Get credential info",
                "tags": [
                    "data"
                ],
                "summary": "Get credential",
                "operationId": "get-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Credential"
                        }
                    },
                    "400": {
                        "description": "Invalid cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update credential",
                "tags": [
                    "data"
                ],
                "summary": "Update credential",
                "operationId": "update-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateCredentialParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003ecred_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateCredentialParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Credential"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete credential",
                "tags": [
                    "data"
                ],
                "summary": "Delete credential",
                "operationId": "delete-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/custom_entities": {
            "get": {
                "description": "List custom_entities info",
                "tags": [
                    "data"
                ],
                "summary": "List custom_entities",
                "operationId": "list-custom_entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "serial_nr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.CustomEntity"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create customEntity",
                "tags": [
                    "data"
                ],
                "summary": "Create customEntity",
                "operationId": "create-customEntity",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateCustomEntityParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateCustomEntityParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CustomEntity"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/custom_entities/count": {
            "get": {
                "description": "Count number of custom_entities",
                "tags": [
                    "data"
                ],
                "summary": "Count custom_entities",
                "operationId": "count-custom_entities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/data/custom_entities/{cent_id}": {
            "get": {
                "description": "Get customEntity info",
                "tags": [
                    "data"
                ],
                "summary": "Get customEntity",
                "operationId": "get-customEntity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cent_id",
                        "name": "cent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CustomEntity"
                        }
                    },
                    "400": {
                        "description": "Invalid cent_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "CustomEntity not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update customEntity",
                "tags": [
                    "data"
                ],
                "summary": "Update customEntity",
                "operationId": "update-customEntity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cent_id",
                        "name": "cent_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateCustomEntityParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003ecent_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateCustomEntityParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CustomEntity"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete customEntity",
                "tags": [
                    "data"
                ],
                "summary": "Delete customEntity",
                "operationId": "delete-customEntity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cent_id",
                        "name": "cent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid cent_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "description": "List devices info",
                "tags": [
                    "devices"
                ],
                "summary": "List devices",
                "operationId": "list-devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'LIKE' operator pattern",
                        "name": "sys_id_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "host_name_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "name_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "sw_version_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "notes_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "ip4_addr_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ip or containing net in CIDR notation",
                        "name": "ip6_addr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device",
                "tags": [
                    "devices"
                ],
                "summary": "Create device",
                "operationId": "create-device",
                "parameters": [
                    {
                        "description": "JSON object of device.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003edev_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/classes": {
            "get": {
                "description": "List device classes info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_classes",
                "operationId": "list-device_classes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceClass"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device class",
                "tags": [
                    "devices"
                ],
                "summary": "Create device_class",
                "operationId": "create-device_class",
                "parameters": [
                    {
                        "description": "Device class description \u0026quot;string\u0026quot;",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/classes/count": {
            "get": {
                "description": "Count number of device classes",
                "tags": [
                    "devices"
                ],
                "summary": "Count device_classes",
                "operationId": "count-device_classes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/classes/{class_id}": {
            "get": {
                "description": "Get device class info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device_class",
                "operationId": "get-device_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class_id",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceClass"
                        }
                    },
                    "400": {
                        "description": "Invalid class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Class not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update device class",
                "tags": [
                    "devices"
                ],
                "summary": "Update device_class",
                "operationId": "update-device_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class_id",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateDeviceClassParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003eclass_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateDeviceClassParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete device class",
                "tags": [
                    "devices"
                ],
                "summary": "Delete device_class",
                "operationId": "delete-device_class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class_id",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/classes/{class_id}/types": {
            "get": {
                "description": "List device class device types info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_class device_types",
                "operationId": "list-device_class-device_types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class_id",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceType"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid class_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/count": {
            "get": {
                "description": "Count number of devices",
                "tags": [
                    "devices"
                ],
                "summary": "Count devices",
                "operationId": "count-devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/credentials": {
            "get": {
                "description": "List device credentials info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_credentials",
                "operationId": "list-device_credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'LIKE' operator pattern",
                        "name": "username_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceCredential"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device credential",
                "tags": [
                    "devices"
                ],
                "summary": "Create device_credential",
                "operationId": "create-device_credential",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateDeviceCredentialParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateDeviceCredentialParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/credentials/count": {
            "get": {
                "description": "Count number of credentials",
                "tags": [
                    "devices"
                ],
                "summary": "Count credentials",
                "operationId": "count-device_credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/credentials/{cred_id}": {
            "get": {
                "description": "Get device credential info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device_credential",
                "operationId": "get-device_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update device credential",
                "tags": [
                    "devices"
                ],
                "summary": "Update device_credential",
                "operationId": "update-device_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateDeviceCredentialParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003ecred_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateDeviceCredentialParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete device credential",
                "tags": [
                    "devices"
                ],
                "summary": "Delete device_credential",
                "operationId": "delete-device_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cred_id",
                        "name": "cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/domains": {
            "get": {
                "description": "List device domains info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_domains",
                "operationId": "list-device_domains",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceDomain"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device domain",
                "tags": [
                    "devices"
                ],
                "summary": "Create device_domain",
                "operationId": "create-device_domain",
                "parameters": [
                    {
                        "description": "Device domain \u0026quot;string\u0026quot;",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceDomain"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/domains/count": {
            "get": {
                "description": "Count number of device domains",
                "tags": [
                    "devices"
                ],
                "summary": "Count device_domains",
                "operationId": "count-device_domains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/domains/{dom_id}": {
            "get": {
                "description": "Get device domain info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device_domain",
                "operationId": "get-device_domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dom_id",
                        "name": "dom_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceDomain"
                        }
                    },
                    "400": {
                        "description": "Invalid dom_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update device domain",
                "tags": [
                    "devices"
                ],
                "summary": "Update device_domain",
                "operationId": "update-device_domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dom_id",
                        "name": "dom_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateDeviceDomainParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003edom_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateDeviceDomainParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceDomain"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete device domain",
                "tags": [
                    "devices"
                ],
                "summary": "Delete device_domain",
                "operationId": "delete-device_domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dom_id",
                        "name": "dom_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid dom_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/domains/{dom_id}/devices": {
            "get": {
                "description": "List device domain devices info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_domain devices",
                "operationId": "list-device_domain-devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dom_id",
                        "name": "dom_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dom_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/snmp_credentials": {
            "get": {
                "description": "List snmp credentials info",
                "tags": [
                    "devices"
                ],
                "summary": "List snmp_credentials",
                "operationId": "list-snmp_credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'LIKE' operator pattern",
                        "name": "label_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.snmpCredential"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create snmp credential",
                "tags": [
                    "devices"
                ],
                "summary": "Create snmp_credential",
                "operationId": "create-snmp_credential",
                "parameters": [
                    {
                        "description": "JSON object of credential.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003esnmp_cred_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/snmp_credentials/count": {
            "get": {
                "description": "Count number of snmp credentials",
                "tags": [
                    "devices"
                ],
                "summary": "Count snmp_credentials",
                "operationId": "count-snmp_credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/snmp_credentials/{snmp_cred_id}": {
            "get": {
                "description": "Get snmp credential info",
                "tags": [
                    "devices"
                ],
                "summary": "Get snmp_credential",
                "operationId": "get-snmp_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snmp_cred_id",
                        "name": "snmp_cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid snmp_cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update snmp credential",
                "tags": [
                    "devices"
                ],
                "summary": "Update snmp_credential",
                "operationId": "update-snmp_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snmp_cred_id",
                        "name": "snmp_cred_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of credential.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003esnmp_cred_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete snmp credential",
                "tags": [
                    "devices"
                ],
                "summary": "Delete snmp_credential",
                "operationId": "delete-snmp_credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snmp_cred_id",
                        "name": "snmp_cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid snmp_cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/snmp_credentials/{snmp_cred_id}/main_devices": {
            "get": {
                "description": "List snmp credential main devices info",
                "tags": [
                    "devices"
                ],
                "summary": "List snmp_credential main devices",
                "operationId": "list-snmp-credential-devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snmp_cred_id",
                        "name": "snmp_cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid snmp_cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/snmp_credentials/{snmp_cred_id}/ro_devices": {
            "get": {
                "description": "List snmp credential read only devices info",
                "tags": [
                    "devices"
                ],
                "summary": "List snmp_credential ro devices",
                "operationId": "list-snmp-credential-ro-devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snmp_cred_id",
                        "name": "snmp_cred_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid snmp_cred_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/types": {
            "get": {
                "description": "List device types info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_types",
                "operationId": "list-device_types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "sys_id_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "manufacturer_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "model_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceType"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device type",
                "tags": [
                    "devices"
                ],
                "summary": "Create device_type",
                "operationId": "create-device_type",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateDeviceTypeParams\u003cbr /\u003esys_id must match ^[\\w-\\.]+$ regex",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateDeviceTypeParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceType"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/types/count": {
            "get": {
                "description": "Count number of device types",
                "tags": [
                    "devices"
                ],
                "summary": "Count device_types",
                "operationId": "count-device_types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/types/{sys_id}": {
            "get": {
                "description": "Get device type info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device_type",
                "operationId": "get-device_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sys_id",
                        "name": "sys_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceType"
                        }
                    },
                    "400": {
                        "description": "Invalid sys_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update device type",
                "tags": [
                    "devices"
                ],
                "summary": "Update device_type",
                "operationId": "update-device_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sys_id",
                        "name": "sys_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateDeviceTypeParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003esys_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateDeviceTypeParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceType"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete device type",
                "tags": [
                    "devices"
                ],
                "summary": "Delete device_type",
                "operationId": "delete-device_type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sys_id",
                        "name": "sys_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid sys_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/types/{sys_id}/class": {
            "get": {
                "description": "Get device type class info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device type class",
                "operationId": "get-device-type-class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sys_id",
                        "name": "sys_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceClass"
                        }
                    },
                    "400": {
                        "description": "Invalid sys_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/types/{sys_id}/devices": {
            "get": {
                "description": "List device type devices info",
                "tags": [
                    "devices"
                ],
                "summary": "List device_type devices",
                "operationId": "list-device_type-devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sys_id",
                        "name": "sys_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid sys_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}": {
            "get": {
                "description": "Get device info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device",
                "operationId": "get-device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update device",
                "tags": [
                    "devices"
                ],
                "summary": "Update device",
                "operationId": "update-device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of device.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003edev_id\u003c/li\u003e\u003cli\u003eupdated_on\u003c/li\u003e\u003cli\u003ecreated_on\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete device",
                "tags": [
                    "devices"
                ],
                "summary": "Delete device",
                "operationId": "delete-device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/childs": {
            "get": {
                "description": "List device childs info",
                "tags": [
                    "devices"
                ],
                "summary": "List device childs",
                "operationId": "list-device-childs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.device"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/credentials": {
            "get": {
                "description": "List device credentials info",
                "tags": [
                    "devices"
                ],
                "summary": "List device credentials",
                "operationId": "list-device-credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceCredential"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/domain": {
            "get": {
                "description": "Get device device_domain info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device device_domain",
                "operationId": "get-device-device-domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceDomain"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/entities": {
            "get": {
                "description": "List device entities info",
                "tags": [
                    "devices"
                ],
                "summary": "List device entities",
                "operationId": "list-device-entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Entity"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/extensions": {
            "get": {
                "description": "List device extensions info",
                "tags": [
                    "devices"
                ],
                "summary": "List device extensions",
                "operationId": "list-device-extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceExtension"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/interfaces": {
            "get": {
                "description": "List device interfaces info",
                "tags": [
                    "devices"
                ],
                "summary": "List device interfaces",
                "operationId": "list-device-interfaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.iface"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/ip_interfaces": {
            "get": {
                "description": "List device ip interfaces info",
                "tags": [
                    "devices"
                ],
                "summary": "List device ip interfaces",
                "operationId": "list-device-ip-interfaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ipInterface"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/licenses": {
            "get": {
                "description": "List device licenses info",
                "tags": [
                    "devices"
                ],
                "summary": "List device licenses",
                "operationId": "list-device-licenses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceLicense"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/ospf_nbrs": {
            "get": {
                "description": "List device ospf nbrs info",
                "tags": [
                    "devices"
                ],
                "summary": "List device ospf nbrs",
                "operationId": "list-device-ospf-nbrs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ospfNbr"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/parent": {
            "get": {
                "description": "Get device parent info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device parent",
                "operationId": "get-device-parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.device"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/peer_xconnects": {
            "get": {
                "description": "List device peer xconnects info",
                "tags": [
                    "devices"
                ],
                "summary": "List device peer xconnects",
                "operationId": "list-device-peer-xconnects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.xconnect"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/rl_nbrs": {
            "get": {
                "description": "List device rl nbrs info",
                "tags": [
                    "devices"
                ],
                "summary": "List device rl nbrs",
                "operationId": "list-device-rl-nbrs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.RlNbr"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/site": {
            "get": {
                "description": "Get device site info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device site",
                "operationId": "get-device-site",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Site"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/snmp_credentials_main": {
            "get": {
                "description": "Get device snmp_credentials_main info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device snmp_credentials_main",
                "operationId": "get-device-snmp-credentials-main",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/snmp_credentials_ro": {
            "get": {
                "description": "Get device snmp_credentials_ro info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device snmp_credentials_ro",
                "operationId": "get-device-snmp-credentials-ro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.snmpCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/state": {
            "get": {
                "description": "List device state info",
                "tags": [
                    "devices"
                ],
                "summary": "List device state",
                "operationId": "list-device-state",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.DeviceState"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/type": {
            "get": {
                "description": "Get device device_type info",
                "tags": [
                    "devices"
                ],
                "summary": "Get device device_type",
                "operationId": "get-device-device-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.DeviceType"
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/vlans": {
            "get": {
                "description": "List device vlans info",
                "tags": [
                    "devices"
                ],
                "summary": "List device vlans",
                "operationId": "list-device-vlans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Vlan"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/devices/{dev_id}/xconnects": {
            "get": {
                "description": "List device xconnects info",
                "tags": [
                    "devices"
                ],
                "summary": "List device xconnects",
                "operationId": "list-device-xconnects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dev_id",
                        "name": "dev_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.xconnect"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid dev_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/sites/countries": {
            "get": {
                "description": "List countries info",
                "tags": [
                    "sites"
                ],
                "summary": "List countries",
                "operationId": "list-countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "descr_f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "url encoded SQL 'ILIKE' operator pattern",
                        "name": "code_f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min: 1; max: 1000; default: 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default: 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003e= (unix timestamp in milliseconds)",
                        "name": "updated_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record update time \u003c= (unix timestamp in milliseconds)",
                        "name": "updated_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003e= (unix timestamp in milliseconds)",
                        "name": "created_ge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "record creation time \u003c= (unix timestamp in milliseconds)",
                        "name": "created_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/godevmandb.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create country",
                "tags": [
                    "sites"
                ],
                "summary": "Create country",
                "operationId": "create-country",
                "parameters": [
                    {
                        "description": "JSON object of godevmandb.CreateCountryParams",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.CreateCountryParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Country"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/sites/countries/count": {
            "get": {
                "description": "Count number of countries",
                "tags": [
                    "sites"
                ],
                "summary": "Count countries",
                "operationId": "count-countries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/sites/countries/{country_id}": {
            "get": {
                "description": "Get country info",
                "tags": [
                    "sites"
                ],
                "summary": "Get country",
                "operationId": "get-country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "country_id",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Country"
                        }
                    },
                    "400": {
                        "description": "Invalid country_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Country not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update country",
                "tags": [
                    "sites"
                ],
                "summary": "Update country",
                "operationId": "update-country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "country_id",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object of godevmandb.UpdateCountryParams.\u003cbr /\u003eIgnored fields:\u003cul\u003e\u003cli\u003ecountry_id\u003c/li\u003e\u003c/ul\u003e",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/godevmandb.UpdateCountryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/godevmandb.Country"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete country",
                "tags": [
                    "sites"
                ],
                "summary": "Delete country",
                "operationId": "delete-country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "country_id",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid country_id",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Failde DB transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Return API version info",
                "tags": [
                    "information"
                ],
                "summary": "Version",
                "operationId": "version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid route error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid method error",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "godevmandb.ConCapacity": {
            "type": "object",
            "properties": {
                "con_cap_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.ConClass": {
            "type": "object",
            "properties": {
                "con_class_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.ConProvider": {
            "type": "object",
            "properties": {
                "con_prov_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.ConType": {
            "type": "object",
            "properties": {
                "con_type_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Connection": {
            "type": "object",
            "properties": {
                "con_cap_id": {
                    "type": "integer"
                },
                "con_class_id": {
                    "type": "integer"
                },
                "con_id": {
                    "type": "integer"
                },
                "con_prov_id": {
                    "type": "integer"
                },
                "con_type_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "hint": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Country": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "ISO 3166-1 Alpha-2 code",
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateConCapacityParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateConClassParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateConProviderParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateConTypeParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateConnectionParams": {
            "type": "object",
            "properties": {
                "con_cap_id": {
                    "type": "integer"
                },
                "con_class_id": {
                    "type": "integer"
                },
                "con_prov_id": {
                    "type": "integer"
                },
                "con_type_id": {
                    "type": "integer"
                },
                "hint": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                }
            }
        },
        "godevmandb.CreateCountryParams": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateCredentialParams": {
            "type": "object",
            "properties": {
                "enc_secret": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateCustomEntityParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "part": {
                    "type": "string"
                },
                "serial_nr": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateDeviceCredentialParams": {
            "type": "object",
            "properties": {
                "dev_id": {
                    "type": "integer"
                },
                "enc_secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CreateDeviceTypeParams": {
            "type": "object",
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "hc": {
                    "type": "boolean"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "snmp_ver": {
                    "type": "integer"
                },
                "sys_id": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Credential": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "cred_id": {
                    "type": "integer"
                },
                "enc_secret": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.CustomEntity": {
            "type": "object",
            "properties": {
                "cent_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "part": {
                    "type": "string"
                },
                "serial_nr": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceClass": {
            "type": "object",
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceCredential": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "cred_id": {
                    "type": "integer"
                },
                "dev_id": {
                    "type": "integer"
                },
                "enc_secret": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceDomain": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dom_id": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceExtension": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "ext_id": {
                    "type": "integer"
                },
                "field": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceLicense": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "installed": {
                    "type": "integer"
                },
                "lic_id": {
                    "type": "integer"
                },
                "product": {
                    "type": "string"
                },
                "tot_inst": {
                    "type": "integer"
                },
                "unlocked": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "godevmandb.DeviceState": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "down_time": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "up_time": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.DeviceType": {
            "type": "object",
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "hc": {
                    "type": "boolean"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "snmp_ver": {
                    "description": "highest supported snmp version",
                    "type": "integer"
                },
                "sys_id": {
                    "description": "snmp sysObjectId or some unique identifier if snmp is not supported",
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Entity": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "ent_id": {
                    "type": "integer"
                },
                "hw_product": {
                    "type": "string"
                },
                "hw_revision": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "parent_ent_id": {
                    "type": "integer"
                },
                "physical": {
                    "type": "boolean"
                },
                "serial_nr": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "snmp_ent_id": {
                    "type": "integer"
                },
                "sw_product": {
                    "type": "string"
                },
                "sw_revision": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.RlNbr": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "nbr_ent_id": {
                    "type": "integer"
                },
                "nbr_id": {
                    "type": "integer"
                },
                "nbr_sysname": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Site": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "ext_id": {
                    "type": "integer"
                },
                "ext_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "notes": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "uident": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateConCapacityParams": {
            "type": "object",
            "properties": {
                "con_cap_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateConClassParams": {
            "type": "object",
            "properties": {
                "con_class_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateConProviderParams": {
            "type": "object",
            "properties": {
                "con_prov_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateConTypeParams": {
            "type": "object",
            "properties": {
                "con_type_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateConnectionParams": {
            "type": "object",
            "properties": {
                "con_cap_id": {
                    "type": "integer"
                },
                "con_class_id": {
                    "type": "integer"
                },
                "con_id": {
                    "type": "integer"
                },
                "con_prov_id": {
                    "type": "integer"
                },
                "con_type_id": {
                    "type": "integer"
                },
                "hint": {
                    "type": "string"
                },
                "in_use": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                }
            }
        },
        "godevmandb.UpdateCountryParams": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateCredentialParams": {
            "type": "object",
            "properties": {
                "cred_id": {
                    "type": "integer"
                },
                "enc_secret": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateCustomEntityParams": {
            "type": "object",
            "properties": {
                "cent_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "part": {
                    "type": "string"
                },
                "serial_nr": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateDeviceClassParams": {
            "type": "object",
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "descr": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateDeviceCredentialParams": {
            "type": "object",
            "properties": {
                "cred_id": {
                    "type": "integer"
                },
                "dev_id": {
                    "type": "integer"
                },
                "enc_secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "godevmandb.UpdateDeviceDomainParams": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "dom_id": {
                    "type": "integer"
                }
            }
        },
        "godevmandb.UpdateDeviceTypeParams": {
            "type": "object",
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "hc": {
                    "type": "boolean"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "snmp_ver": {
                    "type": "integer"
                },
                "sys_id": {
                    "type": "string"
                }
            }
        },
        "godevmandb.Vlan": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                },
                "v_id": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "integer"
                }
            }
        },
        "handlers.CountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.StatusResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.archivedInterface": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cisco_opt_power_index": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "host_ip4": {
                    "type": "string"
                },
                "host_ip6": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "ifa_id": {
                    "type": "integer"
                },
                "ifindex": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "otn_if_id": {
                    "type": "integer"
                },
                "type_enum": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "handlers.archivedSubinterface": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "host_ip4": {
                    "type": "string"
                },
                "host_ip6": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "ifindex": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "sifa_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "handlers.device": {
            "type": "object",
            "properties": {
                "backup": {
                    "type": "boolean"
                },
                "backup_failed": {
                    "type": "boolean"
                },
                "created_on": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "dom_id": {
                    "type": "integer"
                },
                "ext_model": {
                    "type": "string"
                },
                "graph": {
                    "type": "boolean"
                },
                "host_name": {
                    "type": "string"
                },
                "installed": {
                    "type": "boolean"
                },
                "ip4_addr": {
                    "type": "string"
                },
                "ip6_addr": {
                    "type": "string"
                },
                "monitor": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "site_id": {
                    "type": "integer"
                },
                "snmp_main_id": {
                    "type": "integer"
                },
                "snmp_ro_id": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "sw_version": {
                    "type": "string"
                },
                "sys_contact": {
                    "type": "string"
                },
                "sys_id": {
                    "type": "string"
                },
                "sys_location": {
                    "type": "string"
                },
                "sys_name": {
                    "type": "string"
                },
                "type_changed": {
                    "type": "boolean"
                },
                "unresponsive": {
                    "type": "boolean"
                },
                "updated_on": {
                    "type": "string"
                },
                "validation_failed": {
                    "type": "boolean"
                }
            }
        },
        "handlers.iface": {
            "type": "object",
            "properties": {
                "adm": {
                    "type": "integer"
                },
                "alias": {
                    "type": "string"
                },
                "con_id": {
                    "type": "integer"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "ent_id": {
                    "type": "integer"
                },
                "if_id": {
                    "type": "integer"
                },
                "ifindex": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "minspeed": {
                    "type": "integer"
                },
                "monerrors": {
                    "type": "integer"
                },
                "monload": {
                    "type": "integer"
                },
                "monstatus": {
                    "type": "integer"
                },
                "montraffic": {
                    "type": "integer"
                },
                "oper": {
                    "type": "integer"
                },
                "otn_if_id": {
                    "type": "integer"
                },
                "parent": {
                    "type": "integer"
                },
                "speed": {
                    "type": "integer"
                },
                "type_enum": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "handlers.ipInterface": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "ifindex": {
                    "type": "integer"
                },
                "ip_addr": {
                    "type": "string"
                },
                "ip_id": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "handlers.ospfNbr": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "nbr_id": {
                    "type": "integer"
                },
                "nbr_ip": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "handlers.snmpCredential": {
            "type": "object",
            "properties": {
                "auth_name": {
                    "type": "string"
                },
                "auth_pass": {
                    "type": "string"
                },
                "auth_proto": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "priv_pass": {
                    "type": "string"
                },
                "priv_proto": {
                    "type": "string"
                },
                "sec_level": {
                    "type": "string"
                },
                "snmp_snmp_cred_id": {
                    "type": "integer"
                },
                "updated_on": {
                    "type": "string"
                },
                "variant": {
                    "type": "integer"
                }
            }
        },
        "handlers.xconnect": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "dev_id": {
                    "type": "integer"
                },
                "if_id": {
                    "type": "integer"
                },
                "op_stat": {
                    "type": "string"
                },
                "op_stat_in": {
                    "type": "string"
                },
                "op_stat_out": {
                    "type": "string"
                },
                "peer_dev_id": {
                    "type": "integer"
                },
                "peer_ifalias": {
                    "type": "string"
                },
                "peer_ip": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                },
                "vc_id": {
                    "type": "integer"
                },
                "vc_idx": {
                    "type": "integer"
                },
                "xc_id": {
                    "type": "integer"
                },
                "xname": {
                    "type": "string"
                }
            }
        }
    }
}