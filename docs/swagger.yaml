basePath: /
definitions:
  godevmandb.ConCapacity:
    properties:
      con_cap_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      notes:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.ConClass:
    properties:
      con_class_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      notes:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.ConProvider:
    properties:
      con_prov_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      notes:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.ConType:
    properties:
      con_type_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      notes:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.Connection:
    properties:
      con_cap_id:
        type: integer
      con_class_id:
        type: integer
      con_id:
        type: integer
      con_prov_id:
        type: integer
      con_type_id:
        type: integer
      created_on:
        type: string
      hint:
        type: string
      in_use:
        type: boolean
      notes:
        type: string
      site_id:
        type: integer
      updated_on:
        type: string
    type: object
  godevmandb.Country:
    properties:
      code:
        description: ISO 3166-1 Alpha-2 code
        type: string
      country_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.CreateConCapacityParams:
    properties:
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.CreateConClassParams:
    properties:
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.CreateConProviderParams:
    properties:
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.CreateConTypeParams:
    properties:
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.CreateConnectionParams:
    properties:
      con_cap_id:
        type: integer
      con_class_id:
        type: integer
      con_prov_id:
        type: integer
      con_type_id:
        type: integer
      hint:
        type: string
      in_use:
        type: boolean
      notes:
        type: string
      site_id:
        type: integer
    type: object
  godevmandb.CreateCountryParams:
    properties:
      code:
        type: string
      descr:
        type: string
    type: object
  godevmandb.CreateCredentialParams:
    properties:
      enc_secret:
        type: string
      label:
        type: string
      username:
        type: string
    type: object
  godevmandb.CreateCustomEntityParams:
    properties:
      descr:
        type: string
      manufacturer:
        type: string
      part:
        type: string
      serial_nr:
        type: string
    type: object
  godevmandb.CreateDeviceCredentialParams:
    properties:
      dev_id:
        type: integer
      enc_secret:
        type: string
      username:
        type: string
    type: object
  godevmandb.CreateDeviceLicenseParams:
    properties:
      condition:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      installed:
        type: integer
      product:
        type: string
      tot_inst:
        type: integer
      unlocked:
        type: integer
      used:
        type: integer
    type: object
  godevmandb.CreateDeviceTypeParams:
    properties:
      class_id:
        type: integer
      hc:
        type: boolean
      manufacturer:
        type: string
      model:
        type: string
      snmp_ver:
        type: integer
      sys_id:
        type: string
    type: object
  godevmandb.CreateEntityParams:
    properties:
      descr:
        type: string
      dev_id:
        type: integer
      hw_product:
        type: string
      hw_revision:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      parent_ent_id:
        type: integer
      physical:
        type: boolean
      serial_nr:
        type: string
      slot:
        type: string
      snmp_ent_id:
        type: integer
      sw_product:
        type: string
      sw_revision:
        type: string
    type: object
  godevmandb.CreateIntBwStatParams:
    properties:
      if_group:
        type: string
      if_id:
        type: integer
      to50in:
        type: integer
      to50out:
        type: integer
      to75in:
        type: integer
      to75out:
        type: integer
      to90in:
        type: integer
      to90out:
        type: integer
      to100in:
        type: integer
      to100out:
        type: integer
    type: object
  godevmandb.CreateRlNbrParams:
    properties:
      dev_id:
        type: integer
      nbr_ent_id:
        type: integer
      nbr_sysname:
        type: string
    type: object
  godevmandb.CreateSiteParams:
    properties:
      addr:
        type: string
      area:
        type: string
      country_id:
        type: integer
      descr:
        type: string
      ext_id:
        type: integer
      ext_name:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      notes:
        type: string
      uident:
        type: string
    type: object
  godevmandb.CreateUserAuthzParams:
    properties:
      dom_id:
        type: integer
      userlevel:
        type: integer
      username:
        type: string
    type: object
  godevmandb.CreateUserGraphParams:
    properties:
      descr:
        type: string
      shared:
        type: boolean
      uri:
        type: string
      username:
        type: string
    type: object
  godevmandb.CreateUserParams:
    properties:
      notes:
        type: string
      userlevel:
        type: integer
      username:
        type: string
    type: object
  godevmandb.CreateVarParams:
    properties:
      content:
        type: string
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.CreateVlanParams:
    properties:
      descr:
        type: string
      dev_id:
        type: integer
      vlan:
        type: integer
    type: object
  godevmandb.Credential:
    properties:
      created_on:
        type: string
      cred_id:
        type: integer
      enc_secret:
        type: string
      label:
        type: string
      updated_on:
        type: string
      username:
        type: string
    type: object
  godevmandb.CustomEntity:
    properties:
      cent_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      manufacturer:
        type: string
      part:
        type: string
      serial_nr:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.DeviceClass:
    properties:
      class_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.DeviceCredential:
    properties:
      created_on:
        type: string
      cred_id:
        type: integer
      dev_id:
        type: integer
      enc_secret:
        type: string
      updated_on:
        type: string
      username:
        type: string
    type: object
  godevmandb.DeviceDomain:
    properties:
      created_on:
        type: string
      descr:
        type: string
      dom_id:
        type: integer
      updated_on:
        type: string
    type: object
  godevmandb.DeviceExtension:
    properties:
      content:
        type: string
      created_on:
        type: string
      dev_id:
        type: integer
      ext_id:
        type: integer
      field:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.DeviceLicense:
    properties:
      condition:
        type: string
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      installed:
        type: integer
      lic_id:
        type: integer
      product:
        type: string
      tot_inst:
        type: integer
      unlocked:
        type: integer
      updated_on:
        type: string
      used:
        type: integer
    type: object
  godevmandb.DeviceState:
    properties:
      created_on:
        type: string
      dev_id:
        type: integer
      down_time:
        type: string
      method:
        type: string
      up_time:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.DeviceType:
    properties:
      class_id:
        type: integer
      created_on:
        type: string
      hc:
        type: boolean
      manufacturer:
        type: string
      model:
        type: string
      snmp_ver:
        description: highest supported snmp version
        type: integer
      sys_id:
        description: snmp sysObjectId or some unique identifier if snmp is not supported
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.Entity:
    properties:
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      ent_id:
        type: integer
      hw_product:
        type: string
      hw_revision:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      parent_ent_id:
        type: integer
      physical:
        type: boolean
      serial_nr:
        type: string
      slot:
        type: string
      snmp_ent_id:
        type: integer
      sw_product:
        type: string
      sw_revision:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.EntityPhyIndex:
    properties:
      created_on:
        type: string
      descr:
        type: string
      ei_id:
        type: integer
      ent_id:
        type: integer
      phy_index:
        type: integer
      updated_on:
        type: string
    type: object
  godevmandb.IntBwStat:
    properties:
      bw_id:
        type: integer
      created_on:
        type: string
      if_group:
        type: string
      if_id:
        type: integer
      to50in:
        type: integer
      to50out:
        type: integer
      to75in:
        type: integer
      to75out:
        type: integer
      to90in:
        type: integer
      to90out:
        type: integer
      to100in:
        type: integer
      to100out:
        type: integer
      updated_on:
        type: string
    type: object
  godevmandb.RlNbr:
    properties:
      created_on:
        type: string
      dev_id:
        type: integer
      nbr_ent_id:
        type: integer
      nbr_id:
        type: integer
      nbr_sysname:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.Site:
    properties:
      addr:
        type: string
      area:
        type: string
      country_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      ext_id:
        type: integer
      ext_name:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      notes:
        type: string
      site_id:
        type: integer
      uident:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.UpdateConCapacityParams:
    properties:
      con_cap_id:
        type: integer
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.UpdateConClassParams:
    properties:
      con_class_id:
        type: integer
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.UpdateConProviderParams:
    properties:
      con_prov_id:
        type: integer
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.UpdateConTypeParams:
    properties:
      con_type_id:
        type: integer
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.UpdateConnectionParams:
    properties:
      con_cap_id:
        type: integer
      con_class_id:
        type: integer
      con_id:
        type: integer
      con_prov_id:
        type: integer
      con_type_id:
        type: integer
      hint:
        type: string
      in_use:
        type: boolean
      notes:
        type: string
      site_id:
        type: integer
    type: object
  godevmandb.UpdateCountryParams:
    properties:
      code:
        type: string
      country_id:
        type: integer
      descr:
        type: string
    type: object
  godevmandb.UpdateCredentialParams:
    properties:
      cred_id:
        type: integer
      enc_secret:
        type: string
      label:
        type: string
      username:
        type: string
    type: object
  godevmandb.UpdateCustomEntityParams:
    properties:
      cent_id:
        type: integer
      descr:
        type: string
      manufacturer:
        type: string
      part:
        type: string
      serial_nr:
        type: string
    type: object
  godevmandb.UpdateDeviceClassParams:
    properties:
      class_id:
        type: integer
      descr:
        type: string
    type: object
  godevmandb.UpdateDeviceCredentialParams:
    properties:
      cred_id:
        type: integer
      dev_id:
        type: integer
      enc_secret:
        type: string
      username:
        type: string
    type: object
  godevmandb.UpdateDeviceDomainParams:
    properties:
      descr:
        type: string
      dom_id:
        type: integer
    type: object
  godevmandb.UpdateDeviceLicenseParams:
    properties:
      condition:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      installed:
        type: integer
      lic_id:
        type: integer
      product:
        type: string
      tot_inst:
        type: integer
      unlocked:
        type: integer
      used:
        type: integer
    type: object
  godevmandb.UpdateDeviceTypeParams:
    properties:
      class_id:
        type: integer
      hc:
        type: boolean
      manufacturer:
        type: string
      model:
        type: string
      snmp_ver:
        type: integer
      sys_id:
        type: string
    type: object
  godevmandb.UpdateEntityParams:
    properties:
      descr:
        type: string
      dev_id:
        type: integer
      ent_id:
        type: integer
      hw_product:
        type: string
      hw_revision:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      parent_ent_id:
        type: integer
      physical:
        type: boolean
      serial_nr:
        type: string
      slot:
        type: string
      snmp_ent_id:
        type: integer
      sw_product:
        type: string
      sw_revision:
        type: string
    type: object
  godevmandb.UpdateIntBwStatParams:
    properties:
      bw_id:
        type: integer
      if_group:
        type: string
      if_id:
        type: integer
      to50in:
        type: integer
      to50out:
        type: integer
      to75in:
        type: integer
      to75out:
        type: integer
      to90in:
        type: integer
      to90out:
        type: integer
      to100in:
        type: integer
      to100out:
        type: integer
    type: object
  godevmandb.UpdateRlNbrParams:
    properties:
      dev_id:
        type: integer
      nbr_ent_id:
        type: integer
      nbr_id:
        type: integer
      nbr_sysname:
        type: string
    type: object
  godevmandb.UpdateSiteParams:
    properties:
      addr:
        type: string
      area:
        type: string
      country_id:
        type: integer
      descr:
        type: string
      ext_id:
        type: integer
      ext_name:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      notes:
        type: string
      site_id:
        type: integer
      uident:
        type: string
    type: object
  godevmandb.UpdateUserAuthzParams:
    properties:
      dom_id:
        type: integer
      userlevel:
        type: integer
      username:
        type: string
    type: object
  godevmandb.UpdateUserGraphParams:
    properties:
      descr:
        type: string
      graph_id:
        type: integer
      shared:
        type: boolean
      uri:
        type: string
      username:
        type: string
    type: object
  godevmandb.UpdateUserParams:
    properties:
      notes:
        type: string
      userlevel:
        type: integer
      username:
        type: string
    type: object
  godevmandb.UpdateVarParams:
    properties:
      content:
        type: string
      descr:
        type: string
      notes:
        type: string
    type: object
  godevmandb.UpdateVlanParams:
    properties:
      descr:
        type: string
      dev_id:
        type: integer
      v_id:
        type: integer
      vlan:
        type: integer
    type: object
  godevmandb.User:
    properties:
      created_on:
        type: string
      notes:
        type: string
      updated_on:
        type: string
      userlevel:
        description: Global level for user
        type: integer
      username:
        type: string
    type: object
  godevmandb.UserAuthz:
    properties:
      created_on:
        type: string
      dom_id:
        type: integer
      updated_on:
        type: string
      userlevel:
        description: Domain level for user
        type: integer
      username:
        type: string
    type: object
  godevmandb.UserGraph:
    properties:
      created_on:
        type: string
      descr:
        type: string
      graph_id:
        type: integer
      shared:
        type: boolean
      updated_on:
        type: string
      uri:
        type: string
      username:
        type: string
    type: object
  godevmandb.Var:
    properties:
      content:
        type: string
      created_on:
        type: string
      descr:
        type: string
      notes:
        type: string
      updated_on:
        type: string
    type: object
  godevmandb.Vlan:
    properties:
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      updated_on:
        type: string
      v_id:
        type: integer
      vlan:
        type: integer
    type: object
  handlers.CountResponse:
    properties:
      count:
        type: integer
    type: object
  handlers.StatusResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  handlers.archivedInterface:
    properties:
      alias:
        type: string
      cisco_opt_power_index:
        type: string
      created_on:
        type: string
      descr:
        type: string
      host_ip4:
        type: string
      host_ip6:
        type: string
      hostname:
        type: string
      ifa_id:
        type: integer
      ifindex:
        type: integer
      mac:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      otn_if_id:
        type: integer
      type_enum:
        type: integer
      updated_on:
        type: string
    type: object
  handlers.archivedSubinterface:
    properties:
      alias:
        type: string
      created_on:
        type: string
      descr:
        type: string
      host_ip4:
        type: string
      host_ip6:
        type: string
      hostname:
        type: string
      ifindex:
        type: integer
      mac:
        type: string
      notes:
        type: string
      sifa_id:
        type: integer
      type:
        type: string
      updated_on:
        type: string
    type: object
  handlers.device:
    properties:
      backup:
        type: boolean
      backup_failed:
        type: boolean
      created_on:
        type: string
      dev_id:
        type: integer
      dom_id:
        type: integer
      ext_model:
        type: string
      graph:
        type: boolean
      host_name:
        type: string
      installed:
        type: boolean
      ip4_addr:
        type: string
      ip6_addr:
        type: string
      monitor:
        type: boolean
      notes:
        type: string
      parent:
        type: integer
      site_id:
        type: integer
      snmp_main_id:
        type: integer
      snmp_ro_id:
        type: integer
      source:
        type: string
      sw_version:
        type: string
      sys_contact:
        type: string
      sys_id:
        type: string
      sys_location:
        type: string
      sys_name:
        type: string
      type_changed:
        type: boolean
      unresponsive:
        type: boolean
      updated_on:
        type: string
      validation_failed:
        type: boolean
    type: object
  handlers.iface:
    properties:
      adm:
        type: integer
      alias:
        type: string
      con_id:
        type: integer
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      ent_id:
        type: integer
      if_id:
        type: integer
      ifindex:
        type: integer
      mac:
        type: string
      minspeed:
        type: integer
      monerrors:
        type: integer
      monload:
        type: integer
      monstatus:
        type: integer
      montraffic:
        type: integer
      oper:
        type: integer
      otn_if_id:
        type: integer
      parent:
        type: integer
      speed:
        type: integer
      type_enum:
        type: integer
      updated_on:
        type: string
    type: object
  handlers.ipInterface:
    properties:
      alias:
        type: string
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      ifindex:
        type: integer
      ip_addr:
        type: string
      ip_id:
        type: integer
      updated_on:
        type: string
    type: object
  handlers.ospfNbr:
    properties:
      condition:
        type: string
      created_on:
        type: string
      dev_id:
        type: integer
      nbr_id:
        type: integer
      nbr_ip:
        type: string
      updated_on:
        type: string
    type: object
  handlers.snmpCredential:
    properties:
      auth_name:
        type: string
      auth_pass:
        type: string
      auth_proto:
        type: string
      created_on:
        type: string
      label:
        type: string
      priv_pass:
        type: string
      priv_proto:
        type: string
      sec_level:
        type: string
      snmp_snmp_cred_id:
        type: integer
      updated_on:
        type: string
      variant:
        type: integer
    type: object
  handlers.subinterface:
    properties:
      adm:
        type: integer
      alias:
        type: string
      created_on:
        type: string
      descr:
        type: string
      if_id:
        type: integer
      ifindex:
        type: integer
      mac:
        type: string
      notes:
        type: string
      oper:
        type: integer
      sif_id:
        type: integer
      speed:
        type: integer
      type_enum:
        type: string
      updated_on:
        type: string
    type: object
  handlers.xconnect:
    properties:
      created_on:
        type: string
      descr:
        type: string
      dev_id:
        type: integer
      if_id:
        type: integer
      op_stat:
        type: string
      op_stat_in:
        type: string
      op_stat_out:
        type: string
      peer_dev_id:
        type: integer
      peer_ifalias:
        type: string
      peer_ip:
        type: string
      updated_on:
        type: string
      vc_id:
        type: integer
      vc_idx:
        type: integer
      xc_id:
        type: integer
      xname:
        type: string
    type: object
info:
  contact:
    email: marko@aretaja.org
    name: API Support
  description: goDevmans API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: goDevmanAPI
  version: v0.0.1-devel.1
paths:
  /:
    get:
      description: Welcome message
      operationId: root
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Welcome
      tags:
      - information
  /archived/interfaces:
    get:
      description: List archived interfaces info
      operationId: list-archived_interfaces
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ifindex_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: otn_if_id_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: cisco_opt_power_index_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: hostname_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: host_ip4_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: host_ip6_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: manufacturer_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: model_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: alias_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: type_enum_f
        type: string
      - description: SQL '=' operator value (MAC address)
        in: query
        name: mac_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.archivedInterface'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List archived_interfaces
      tags:
      - archived
    post:
      description: Create archived interface
      operationId: create-archived_interface
      parameters:
      - description: JSON object of archivedInterface.<br />Ignored fields:<ul><li>ifa_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.archivedInterface'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.archivedInterface'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create archived_interface
      tags:
      - archived
  /archived/interfaces/{ifa_id}:
    delete:
      description: Delete archived interface
      operationId: delete-archived_interface
      parameters:
      - description: ifa_id
        in: path
        name: ifa_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ifa_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete archived_interface
      tags:
      - archived
    get:
      description: Get archived interface info
      operationId: get-archived_interface
      parameters:
      - description: ifa_id
        in: path
        name: ifa_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.archivedInterface'
        "400":
          description: Invalid ifa_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Archived interface not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get archived_interface
      tags:
      - archived
    put:
      description: Update archived interface
      operationId: update-archived_interface
      parameters:
      - description: ifa_id
        in: path
        name: ifa_id
        required: true
        type: string
      - description: JSON object of archivedInterface.<br />Ignored fields:<ul><li>ifa_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.archivedInterface'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.archivedInterface'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update archived_interface
      tags:
      - archived
  /archived/interfaces/count:
    get:
      description: Count number of archived interfaces
      operationId: count-archived_interfaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count archived_interfaces
      tags:
      - archived
  /archived/subinterfaces:
    get:
      description: List archived subinterfaces info
      operationId: list-archived_subinterfaces
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ifindex_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: parent_descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: alias_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: type_f
        type: string
      - description: SQL '=' operator value (MAC address)
        in: query
        name: mac_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: hostname_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: host_ip4_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: host_ip6_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.archivedSubinterface'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List archived_subinterfaces
      tags:
      - archived
    post:
      description: Create archived subinterface
      operationId: create-archived_subinterface
      parameters:
      - description: JSON object of archivedSubinterface.<br />Ignored fields:<ul><li>sifa_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.archivedSubinterface'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.archivedSubinterface'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create archived_subinterface
      tags:
      - archived
  /archived/subinterfaces/{sifa_id}:
    delete:
      description: Delete archived subinterface
      operationId: delete-archived_subinterface
      parameters:
      - description: sifa_id
        in: path
        name: sifa_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid sifa_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete archived_subinterface
      tags:
      - archived
    get:
      description: Get archived subinterface info
      operationId: get-archived_subinterface
      parameters:
      - description: sifa_id
        in: path
        name: sifa_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.archivedSubinterface'
        "400":
          description: Invalid sifa_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Archived subinterface not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get archived_subinterface
      tags:
      - archived
    put:
      description: Update archived subinterface
      operationId: update-archived_subinterface
      parameters:
      - description: sifa_id
        in: path
        name: sifa_id
        required: true
        type: string
      - description: JSON object of archivedSubinterface.<br />Ignored fields:<ul><li>sifa_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.archivedSubinterface'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.archivedSubinterface'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update archived_subinterface
      tags:
      - archived
  /archived/subinterfaces/count:
    get:
      description: Count number of archived subinterfaces
      operationId: count-archived_subinterfaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count archived_subinterfaces
      tags:
      - archived
  /config/credentials:
    get:
      description: List credentials info
      operationId: list-credentials
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: label_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Credential'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List credentials
      tags:
      - config
    post:
      description: Create credential
      operationId: create-credential
      parameters:
      - description: JSON object of godevmandb.CreateCredentialParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateCredentialParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Credential'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create credential
      tags:
      - config
  /config/credentials/{cred_id}:
    delete:
      description: Delete credential
      operationId: delete-credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete credential
      tags:
      - config
    get:
      description: Get credential info
      operationId: get-credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Credential'
        "400":
          description: Invalid cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Credential not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get credential
      tags:
      - config
    put:
      description: Update credential
      operationId: update-credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateCredentialParams.<br />Ignored
          fields:<ul><li>cred_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateCredentialParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Credential'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update credential
      tags:
      - config
  /config/credentials/count:
    get:
      description: Count number of credentials
      operationId: count-credentials
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count credentials
      tags:
      - config
  /config/snmp_credentials:
    get:
      description: List snmp credentials info
      operationId: list-snmp_credentials
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern
        in: query
        name: label_f
        type: string
      - description: SQL '=' operator value
        in: query
        name: variant_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.snmpCredential'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List snmp_credentials
      tags:
      - config
    post:
      description: Create snmp credential
      operationId: create-snmp_credential
      parameters:
      - description: JSON object of credential.<br />Ignored fields:<ul><li>snmp_cred_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.snmpCredential'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.snmpCredential'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create snmp_credential
      tags:
      - config
  /config/snmp_credentials/{snmp_cred_id}:
    delete:
      description: Delete snmp credential
      operationId: delete-snmp_credential
      parameters:
      - description: snmp_cred_id
        in: path
        name: snmp_cred_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid snmp_cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete snmp_credential
      tags:
      - config
    get:
      description: Get snmp credential info
      operationId: get-snmp_credential
      parameters:
      - description: snmp_cred_id
        in: path
        name: snmp_cred_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.snmpCredential'
        "400":
          description: Invalid snmp_cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Credential not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get snmp_credential
      tags:
      - config
    put:
      description: Update snmp credential
      operationId: update-snmp_credential
      parameters:
      - description: snmp_cred_id
        in: path
        name: snmp_cred_id
        required: true
        type: string
      - description: JSON object of credential.<br />Ignored fields:<ul><li>snmp_cred_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.snmpCredential'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.snmpCredential'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update snmp_credential
      tags:
      - config
  /config/snmp_credentials/{snmp_cred_id}/main_devices:
    get:
      description: List snmp credential main devices info
      operationId: list-snmp-credential-devices
      parameters:
      - description: snmp_cred_id
        in: path
        name: snmp_cred_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid snmp_cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List snmp_credential main devices
      tags:
      - config
  /config/snmp_credentials/{snmp_cred_id}/ro_devices:
    get:
      description: List snmp credential read only devices info
      operationId: list-snmp-credential-ro-devices
      parameters:
      - description: snmp_cred_id
        in: path
        name: snmp_cred_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid snmp_cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List snmp_credential ro devices
      tags:
      - config
  /config/snmp_credentials/count:
    get:
      description: Count number of snmp credentials
      operationId: count-snmp_credentials
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count snmp_credentials
      tags:
      - config
  /config/vars:
    get:
      description: List vars info
      operationId: list-vars
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: content_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Var'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List vars
      tags:
      - config
    post:
      description: Create var
      operationId: create-var
      parameters:
      - description: JSON object of godevmandb.CreateVarParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateVarParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Var'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create var
      tags:
      - config
  /config/vars/{descr}:
    delete:
      description: Delete var
      operationId: delete-var
      parameters:
      - description: descr
        in: path
        name: descr
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid descr
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete var
      tags:
      - config
    get:
      description: Get var info
      operationId: get-var
      parameters:
      - description: descr
        in: path
        name: descr
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Var'
        "400":
          description: Invalid descr
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Var not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get var
      tags:
      - config
    put:
      description: Update var
      operationId: update-var
      parameters:
      - description: descr
        in: path
        name: descr
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateVarParams.<br />Ignored fields:<ul><li>descr</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateVarParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Var'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update var
      tags:
      - config
  /config/vars/count:
    get:
      description: Count number of vars
      operationId: count-vars
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count vars
      tags:
      - config
  /connections:
    get:
      description: List connection info
      operationId: list-connections
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: hint_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: in_use_f
        type: boolean
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List connections
      tags:
      - connections
    post:
      description: Create connection
      operationId: create-connection
      parameters:
      - description: JSON object of godevmandb.CreateConnectionParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateConnectionParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Connection'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create connection
      tags:
      - connections
  /connections/{con_id}:
    delete:
      description: Delete connection
      operationId: delete-connection
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete connection
      tags:
      - connections
    get:
      description: Get connection info
      operationId: get-connection
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Connection'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Connection not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection
      tags:
      - connections
    put:
      description: Update connection
      operationId: update-connection
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateConnectionParams.<br />Ignored
          fields:<ul><li>con_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateConnectionParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Connection'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update connection
      tags:
      - connections
  /connections/{con_id}/capacity:
    get:
      description: Get connection capacity info
      operationId: get-connection-capacity
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConCapacity'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection capacity
      tags:
      - connections
  /connections/{con_id}/class:
    get:
      description: Get connection class info
      operationId: get-connection-class
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConClass'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection class
      tags:
      - connections
  /connections/{con_id}/interfaces:
    get:
      description: List connection interfaces info
      operationId: list-connection-interfaces
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List connection interfaces
      tags:
      - connections
  /connections/{con_id}/provider:
    get:
      description: Get connection provider info
      operationId: get-connection-provider
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConProvider'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection provider
      tags:
      - connections
  /connections/{con_id}/site:
    get:
      description: Get connection site info
      operationId: get-connection-site
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Site'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection site
      tags:
      - connections
  /connections/{con_id}/type:
    get:
      description: Get connection type info
      operationId: get-connection-type
      parameters:
      - description: con_id
        in: path
        name: con_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConType'
        "400":
          description: Invalid con_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get connection type
      tags:
      - connections
  /connections/capacities:
    get:
      description: List connection capacities info
      operationId: list-con_capacities
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.ConCapacity'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_capacities
      tags:
      - connections
    post:
      description: Create connection capacity
      operationId: create-capacity
      parameters:
      - description: JSON object of godevmandb.CreateConCapacityParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateConCapacityParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.ConCapacity'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create capacity
      tags:
      - connections
  /connections/capacities/{con_cap_id}:
    delete:
      description: Delete connection capacity
      operationId: delete-capacity
      parameters:
      - description: con_cap_id
        in: path
        name: con_cap_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid con_cap_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete capacity
      tags:
      - connections
    get:
      description: Get connection capacity info
      operationId: get-capacity
      parameters:
      - description: con_cap_id
        in: path
        name: con_cap_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConCapacity'
        "400":
          description: Invalid con_cap_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Capacity not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get capacity
      tags:
      - connections
    put:
      description: Update connection capacity
      operationId: update-capacity
      parameters:
      - description: con_cap_id
        in: path
        name: con_cap_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateConCapacityParams.<br />Ignored
          fields:<ul><li>con_cap_id</li>/ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateConCapacityParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConCapacity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update capacity
      tags:
      - connections
  /connections/capacities/{con_cap_id}/connections:
    get:
      description: List connection capacity connections info
      operationId: list-capacity-connections
      parameters:
      - description: con_cap_id
        in: path
        name: con_cap_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "400":
          description: Invalid con_cap_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List capacity connections
      tags:
      - connections
  /connections/capacities/count:
    get:
      description: Count number of connection capacities
      operationId: count-con_capacities
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count con_capacities
      tags:
      - connections
  /connections/classes:
    get:
      description: List connection classes info
      operationId: list-con_classes
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.ConClass'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_classes
      tags:
      - connections
    post:
      description: Create connection class
      operationId: create-con_class
      parameters:
      - description: JSON object of godevmandb.CreateConClassParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateConClassParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.ConClass'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create con_class
      tags:
      - connections
  /connections/classes/{con_class_id}:
    delete:
      description: Delete connection class
      operationId: delete-con_class
      parameters:
      - description: con_class_id
        in: path
        name: con_class_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid con_class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete con_class
      tags:
      - connections
    get:
      description: Get connection class info
      operationId: get-con_class
      parameters:
      - description: con_class_id
        in: path
        name: con_class_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConClass'
        "400":
          description: Invalid con_class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Class not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get con_class
      tags:
      - connections
    put:
      description: Update connection class
      operationId: update-con_class
      parameters:
      - description: con_class_id
        in: path
        name: con_class_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateConClassParams.<br />Ignored
          fields:<ul><li>con_class_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateConClassParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConClass'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update con_class
      tags:
      - connections
  /connections/classes/{con_class_id}/connections:
    get:
      description: List connection class connections info
      operationId: list-con_class-connections
      parameters:
      - description: con_class_id
        in: path
        name: con_class_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "400":
          description: Invalid con_class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_class connections
      tags:
      - connections
  /connections/classes/count:
    get:
      description: Count number of connection classes
      operationId: count-con_classes
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count con_classes
      tags:
      - connections
  /connections/count:
    get:
      description: Count number of connections
      operationId: count-connections
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count connections
      tags:
      - connections
  /connections/providers:
    get:
      description: List connection providers info
      operationId: list-con_providers
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.ConProvider'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_providers
      tags:
      - connections
    post:
      description: Create connection provider
      operationId: create-con_provider
      parameters:
      - description: JSON object of godevmandb.CreateConProviderParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateConProviderParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.ConProvider'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create con_provider
      tags:
      - connections
  /connections/providers/{con_prov_id}:
    delete:
      description: Delete connection provider
      operationId: delete-con_provider
      parameters:
      - description: con_prov_id
        in: path
        name: con_prov_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid con_prov_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete con_provider
      tags:
      - connections
    get:
      description: Get connection provider info
      operationId: get-con_provider
      parameters:
      - description: con_prov_id
        in: path
        name: con_prov_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConProvider'
        "400":
          description: Invalid con_prov_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Provider not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get con_provider
      tags:
      - connections
    put:
      description: Update connection provider
      operationId: update-con_provider
      parameters:
      - description: con_prov_id
        in: path
        name: con_prov_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateConProviderParams.<br />Ignored
          fields:<ul><li>con_prov_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateConProviderParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConProvider'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update con_provider
      tags:
      - connections
  /connections/providers/{con_prov_id}/connections:
    get:
      description: List connection provider connections info
      operationId: list-con_provider-connections
      parameters:
      - description: con_prov_id
        in: path
        name: con_prov_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "400":
          description: Invalid con_prov_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_provider connections
      tags:
      - connections
  /connections/providers/count:
    get:
      description: Count number of connection providers
      operationId: count-con_providers
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count con_providers
      tags:
      - connections
  /connections/types:
    get:
      description: List connection types info
      operationId: list-con_types
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.ConType'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_types
      tags:
      - connections
    post:
      description: Create connection type
      operationId: create-con_type
      parameters:
      - description: JSON object of godevmandb.CreateConTypeParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateConTypeParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.ConType'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create con_type
      tags:
      - connections
  /connections/types/{con_type_id}:
    delete:
      description: Delete connection type
      operationId: delete-con_type
      parameters:
      - description: con_type_id
        in: path
        name: con_type_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid con_type_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete con_type
      tags:
      - connections
    get:
      description: Get connection type info
      operationId: get-con_type
      parameters:
      - description: con_type_id
        in: path
        name: con_type_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConType'
        "400":
          description: Invalid con_type_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Type not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get con_type
      tags:
      - connections
    put:
      description: Update connection type
      operationId: update-con_type
      parameters:
      - description: con_type_id
        in: path
        name: con_type_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateConTypeParams.<br />Ignored fields:<ul><li>con_type_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateConTypeParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.ConType'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update con_type
      tags:
      - connections
  /connections/types/{con_type_id}/connections:
    get:
      description: List connection type connections info
      operationId: list-con_type-connections
      parameters:
      - description: con_type_id
        in: path
        name: con_type_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "400":
          description: Invalid con_type_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List con_type connections
      tags:
      - connections
  /connections/types/count:
    get:
      description: Count number of connection types
      operationId: count-con_types
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count con_types
      tags:
      - connections
  /devices:
    get:
      description: List devices info
      operationId: list-devices
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern
        in: query
        name: sys_id_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: host_name_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: source_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: sys_name_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: sw_version_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: ext_model_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: ip4_addr_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: ip6_addr_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: installed_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: monitor_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: graph_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: backup_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: type_changed_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: backup_failed_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: validation_failed_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: unresponsive_f
        type: boolean
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List devices
      tags:
      - devices
    post:
      description: Create device
      operationId: create-device
      parameters:
      - description: JSON object of device.<br />Ignored fields:<ul><li>dev_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.device'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device
      tags:
      - devices
  /devices/{dev_id}:
    delete:
      description: Delete device
      operationId: delete-device
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device
      tags:
      - devices
    get:
      description: Get device info
      operationId: get-device
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Device not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device
      tags:
      - devices
    put:
      description: Update device
      operationId: update-device
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      - description: JSON object of device.<br />Ignored fields:<ul><li>dev_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.device'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device
      tags:
      - devices
  /devices/{dev_id}/childs:
    get:
      description: List device childs info
      operationId: list-device-childs
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device childs
      tags:
      - devices
  /devices/{dev_id}/credentials:
    get:
      description: List device credentials info
      operationId: list-device-credentials
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceCredential'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device credentials
      tags:
      - devices
  /devices/{dev_id}/domain:
    get:
      description: Get device device_domain info
      operationId: get-device-device-domain
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceDomain'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device device_domain
      tags:
      - devices
  /devices/{dev_id}/entities:
    get:
      description: List device entities info
      operationId: list-device-entities
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Entity'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device entities
      tags:
      - devices
  /devices/{dev_id}/extensions:
    get:
      description: List device extensions info
      operationId: list-device-extensions
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceExtension'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device extensions
      tags:
      - devices
  /devices/{dev_id}/interfaces:
    get:
      description: List device interfaces info
      operationId: list-device-interfaces
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device interfaces
      tags:
      - devices
  /devices/{dev_id}/ip_interfaces:
    get:
      description: List device ip interfaces info
      operationId: list-device-ip-interfaces
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ipInterface'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device ip interfaces
      tags:
      - devices
  /devices/{dev_id}/licenses:
    get:
      description: List device licenses info
      operationId: list-device-licenses
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceLicense'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device licenses
      tags:
      - devices
  /devices/{dev_id}/ospf_nbrs:
    get:
      description: List device ospf nbrs info
      operationId: list-device-ospf-nbrs
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ospfNbr'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device ospf nbrs
      tags:
      - devices
  /devices/{dev_id}/parent:
    get:
      description: Get device parent info
      operationId: get-device-parent
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device parent
      tags:
      - devices
  /devices/{dev_id}/peer_xconnects:
    get:
      description: List device peer xconnects info
      operationId: list-device-peer-xconnects
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.xconnect'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device peer xconnects
      tags:
      - devices
  /devices/{dev_id}/rl_nbrs:
    get:
      description: List device rl nbrs info
      operationId: list-device-rl-nbrs
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.RlNbr'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device rl nbrs
      tags:
      - devices
  /devices/{dev_id}/site:
    get:
      description: Get device site info
      operationId: get-device-site
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Site'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device site
      tags:
      - devices
  /devices/{dev_id}/snmp_credentials_main:
    get:
      description: Get device snmp_credentials_main info
      operationId: get-device-snmp-credentials-main
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.snmpCredential'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device snmp_credentials_main
      tags:
      - devices
  /devices/{dev_id}/snmp_credentials_ro:
    get:
      description: Get device snmp_credentials_ro info
      operationId: get-device-snmp-credentials-ro
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.snmpCredential'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device snmp_credentials_ro
      tags:
      - devices
  /devices/{dev_id}/state:
    get:
      description: List device state info
      operationId: list-device-state
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceState'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device state
      tags:
      - devices
  /devices/{dev_id}/type:
    get:
      description: Get device device_type info
      operationId: get-device-device-type
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceType'
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device device_type
      tags:
      - devices
  /devices/{dev_id}/vlans:
    get:
      description: List device vlans info
      operationId: list-device-vlans
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Vlan'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device vlans
      tags:
      - devices
  /devices/{dev_id}/xconnects:
    get:
      description: List device xconnects info
      operationId: list-device-xconnects
      parameters:
      - description: dev_id
        in: path
        name: dev_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.xconnect'
            type: array
        "400":
          description: Invalid dev_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device xconnects
      tags:
      - devices
  /devices/classes:
    get:
      description: List device classes info
      operationId: list-device_classes
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceClass'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_classes
      tags:
      - devices
    post:
      description: Create device class
      operationId: create-device_class
      parameters:
      - description: Device class description &quot;string&quot;
        in: body
        name: Body
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.DeviceClass'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device_class
      tags:
      - devices
  /devices/classes/{class_id}:
    delete:
      description: Delete device class
      operationId: delete-device_class
      parameters:
      - description: class_id
        in: path
        name: class_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device_class
      tags:
      - devices
    get:
      description: Get device class info
      operationId: get-device_class
      parameters:
      - description: class_id
        in: path
        name: class_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceClass'
        "400":
          description: Invalid class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Class not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_class
      tags:
      - devices
    put:
      description: Update device class
      operationId: update-device_class
      parameters:
      - description: class_id
        in: path
        name: class_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateDeviceClassParams.<br />Ignored
          fields:<ul><li>class_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateDeviceClassParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceClass'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device_class
      tags:
      - devices
  /devices/classes/{class_id}/types:
    get:
      description: List device class device types info
      operationId: list-device_class-device_types
      parameters:
      - description: class_id
        in: path
        name: class_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceType'
            type: array
        "400":
          description: Invalid class_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_class device_types
      tags:
      - devices
  /devices/classes/count:
    get:
      description: Count number of device classes
      operationId: count-device_classes
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count device_classes
      tags:
      - devices
  /devices/count:
    get:
      description: Count number of devices
      operationId: count-devices
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count devices
      tags:
      - devices
  /devices/credentials:
    get:
      description: List device credentials info
      operationId: list-device_credentials
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern
        in: query
        name: username_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceCredential'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_credentials
      tags:
      - devices
    post:
      description: Create device credential
      operationId: create-device_credential
      parameters:
      - description: JSON object of godevmandb.CreateDeviceCredentialParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateDeviceCredentialParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.DeviceCredential'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device_credential
      tags:
      - devices
  /devices/credentials/{cred_id}:
    delete:
      description: Delete device credential
      operationId: delete-device_credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device_credential
      tags:
      - devices
    get:
      description: Get device credential info
      operationId: get-device_credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceCredential'
        "400":
          description: Invalid cred_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Credential not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_credential
      tags:
      - devices
    put:
      description: Update device credential
      operationId: update-device_credential
      parameters:
      - description: cred_id
        in: path
        name: cred_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateDeviceCredentialParams.<br />Ignored
          fields:<ul><li>cred_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateDeviceCredentialParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceCredential'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device_credential
      tags:
      - devices
  /devices/credentials/count:
    get:
      description: Count number of credentials
      operationId: count-device_credentials
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count credentials
      tags:
      - devices
  /devices/domains:
    get:
      description: List device domains info
      operationId: list-device_domains
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceDomain'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_domains
      tags:
      - devices
    post:
      description: Create device domain
      operationId: create-device_domain
      parameters:
      - description: Device domain &quot;string&quot;
        in: body
        name: Body
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.DeviceDomain'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device_domain
      tags:
      - devices
  /devices/domains/{dom_id}:
    delete:
      description: Delete device domain
      operationId: delete-device_domain
      parameters:
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device_domain
      tags:
      - devices
    get:
      description: Get device domain info
      operationId: get-device_domain
      parameters:
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceDomain'
        "400":
          description: Invalid dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Domain not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_domain
      tags:
      - devices
    put:
      description: Update device domain
      operationId: update-device_domain
      parameters:
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateDeviceDomainParams.<br />Ignored
          fields:<ul><li>dom_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateDeviceDomainParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceDomain'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device_domain
      tags:
      - devices
  /devices/domains/{dom_id}/devices:
    get:
      description: List device domain devices info
      operationId: list-device_domain-devices
      parameters:
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_domain devices
      tags:
      - devices
  /devices/domains/count:
    get:
      description: Count number of device domains
      operationId: count-device_domains
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count device_domains
      tags:
      - devices
  /devices/licenses:
    get:
      description: List device_licenses info
      operationId: list-device_licenses
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: product_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: condition_f
        type: string
      - description: SQL '<=' operator value
        in: query
        name: installed_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: installed_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: unlocked_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: unlocked_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: tot_inst_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: tot_inst_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: used_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: used_ge
        type: integer
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceLicense'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_licenses
      tags:
      - devices
    post:
      description: Create device_license
      operationId: create-device_license
      parameters:
      - description: JSON object of godevmandb.DeviceLicenseParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateDeviceLicenseParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.DeviceLicense'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device_license
      tags:
      - devices
  /devices/licenses/{lic_id}:
    delete:
      description: Delete device_license
      operationId: delete-device_license
      parameters:
      - description: lic_id
        in: path
        name: lic_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid lic_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device_license
      tags:
      - devices
    get:
      description: Get device_license info
      operationId: get-device_license
      parameters:
      - description: lic_id
        in: path
        name: lic_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceLicense'
        "400":
          description: Invalid lic_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: DeviceLicense not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_license
      tags:
      - devices
    put:
      description: Update device_license
      operationId: update-device_license
      parameters:
      - description: lic_id
        in: path
        name: lic_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateDeviceLicenseParams.<br />Ignored
          fields:<ul><li>lic_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateDeviceLicenseParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceLicense'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device_license
      tags:
      - devices
  /devices/licenses/{lic_id}/device:
    get:
      description: Get device_license device info
      operationId: get-device_license-device
      parameters:
      - description: lic_id
        in: path
        name: lic_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid lic_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_license device
      tags:
      - devices
  /devices/licenses/count:
    get:
      description: Count number of device_licenses
      operationId: count-device_licenses
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count device_licenses
      tags:
      - devices
  /devices/ospf_nbrs:
    get:
      description: List ospf_nbrs info
      operationId: list-ospf_nbrs
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: condition_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: nbr_ip_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ospfNbr'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List ospf_nbrs
      tags:
      - devices
    post:
      description: Create ospf_nbr
      operationId: create-ospf_nbr
      parameters:
      - description: JSON object of ospfNbr.<br />Ignored fields:<ul><li>nbr_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.ospfNbr'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ospfNbr'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create ospf_nbr
      tags:
      - devices
  /devices/ospf_nbrs/{nbr_id}:
    delete:
      description: Delete ospf_nbr
      operationId: delete-ospf_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete ospf_nbr
      tags:
      - devices
    get:
      description: Get ospf_nbr info
      operationId: get-ospf_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ospfNbr'
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: OspfNbr not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get ospf_nbr
      tags:
      - devices
    put:
      description: Update ospf_nbr
      operationId: update-ospf_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      - description: JSON object of ospfNbr.<br />Ignored fields:<ul><li>nbr_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.ospfNbr'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ospfNbr'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update ospf_nbr
      tags:
      - devices
  /devices/ospf_nbrs/{nbr_id}/device:
    get:
      description: Get ospf_nbr device info
      operationId: get-ospf_nbr-device
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get ospf_nbr device
      tags:
      - devices
  /devices/ospf_nbrs/count:
    get:
      description: Count number of ospf_nbrs
      operationId: count-ospf_nbrs
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count ospf_nbrs
      tags:
      - devices
  /devices/rl_nbrs:
    get:
      description: List radio link neighbors info
      operationId: list-rl_nbrs
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: nbr_sysname_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.RlNbr'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List rl_nbrs
      tags:
      - devices
    post:
      description: Create radio link neighbor
      operationId: create-rl_nbr
      parameters:
      - description: JSON object of godevmandb.RlNbrParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateRlNbrParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.RlNbr'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create rl_nbr
      tags:
      - devices
  /devices/rl_nbrs/{nbr_id}:
    delete:
      description: Delete radio link neighbor
      operationId: delete-rl_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete rl_nbr
      tags:
      - devices
    get:
      description: Get radio link neighbor info
      operationId: get-rl_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.RlNbr'
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Neighbor not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get rl_nbr
      tags:
      - devices
    put:
      description: Update radio link neighbor
      operationId: update-rl_nbr
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateRlNbrParams.<br />Ignored fields:<ul><li>nbr_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateRlNbrParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.RlNbr'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update rl_nbr
      tags:
      - devices
  /devices/rl_nbrs/{nbr_id}/device:
    get:
      description: Get rl_nbr device info
      operationId: get-rl_nbr-device
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get rl_nbr device
      tags:
      - devices
  /devices/rl_nbrs/{nbr_id}/entity:
    get:
      description: Get rl_nbr entity info
      operationId: get-rl_nbr-entity
      parameters:
      - description: nbr_id
        in: path
        name: nbr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid nbr_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get rl_nbr entity
      tags:
      - devices
  /devices/rl_nbrs/count:
    get:
      description: Count number of radio link neighbors
      operationId: count-rl_nbrs
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count rl_nbrs
      tags:
      - devices
  /devices/types:
    get:
      description: List device types info
      operationId: list-device_types
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: sys_id_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: manufacturer_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: model_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: hc_f
        type: boolean
      - description: 0|1|2|3
        in: query
        name: snmp_ver_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.DeviceType'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_types
      tags:
      - devices
    post:
      description: Create device type
      operationId: create-device_type
      parameters:
      - description: JSON object of godevmandb.CreateDeviceTypeParams<br />sys_id
          must match ^[\w-\.]+$ regex
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateDeviceTypeParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.DeviceType'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create device_type
      tags:
      - devices
  /devices/types/{sys_id}:
    delete:
      description: Delete device type
      operationId: delete-device_type
      parameters:
      - description: sys_id
        in: path
        name: sys_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid sys_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete device_type
      tags:
      - devices
    get:
      description: Get device type info
      operationId: get-device_type
      parameters:
      - description: sys_id
        in: path
        name: sys_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceType'
        "400":
          description: Invalid sys_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Domain not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device_type
      tags:
      - devices
    put:
      description: Update device type
      operationId: update-device_type
      parameters:
      - description: sys_id
        in: path
        name: sys_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateDeviceTypeParams.<br />Ignored
          fields:<ul><li>sys_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateDeviceTypeParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceType'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update device_type
      tags:
      - devices
  /devices/types/{sys_id}/class:
    get:
      description: Get device type class info
      operationId: get-device-type-class
      parameters:
      - description: sys_id
        in: path
        name: sys_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceClass'
        "400":
          description: Invalid sys_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get device type class
      tags:
      - devices
  /devices/types/{sys_id}/devices:
    get:
      description: List device type devices info
      operationId: list-device_type-devices
      parameters:
      - description: sys_id
        in: path
        name: sys_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid sys_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List device_type devices
      tags:
      - devices
  /devices/types/count:
    get:
      description: Count number of device types
      operationId: count-device_types
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count device_types
      tags:
      - devices
  /devices/vlans:
    get:
      description: List vlans info
      operationId: list-vlans
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern
        in: query
        name: vlan_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Vlan'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List vlans
      tags:
      - devices
    post:
      description: Create vlan
      operationId: create-vlan
      parameters:
      - description: JSON object of godevmandb.VlanParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateVlanParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Vlan'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create vlan
      tags:
      - devices
  /devices/vlans/{v_id}:
    delete:
      description: Delete vlan
      operationId: delete-vlan
      parameters:
      - description: v_id
        in: path
        name: v_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid v_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete vlan
      tags:
      - devices
    get:
      description: Get vlan info
      operationId: get-vlan
      parameters:
      - description: v_id
        in: path
        name: v_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Vlan'
        "400":
          description: Invalid v_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Vlan not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get vlan
      tags:
      - devices
    put:
      description: Update vlan
      operationId: update-vlan
      parameters:
      - description: v_id
        in: path
        name: v_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateVlanParams.<br />Ignored fields:<ul><li>v_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateVlanParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Vlan'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update vlan
      tags:
      - devices
  /devices/vlans/{v_id}/device:
    get:
      description: Get vlan device info
      operationId: get-vlan-device
      parameters:
      - description: v_id
        in: path
        name: v_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid v_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get vlan device
      tags:
      - devices
  /devices/vlans/count:
    get:
      description: Count number of vlans
      operationId: count-vlans
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failde DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count vlans
      tags:
      - devices
  /devices/xconnects:
    get:
      description: List xconnects info
      operationId: list-xconnects
      parameters:
      - description: url encoded SQL '=' operator pattern
        in: query
        name: vc_idx_f
        type: string
      - description: url encoded SQL '=' operator pattern
        in: query
        name: vc_id_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: peer_ifalias_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: xname_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: op_stat_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: op_stat_in_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: op_stat_out_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: peer_ip_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.xconnect'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List xconnects
      tags:
      - devices
    post:
      description: Create xconnect
      operationId: create-xconnect
      parameters:
      - description: JSON object of xconnect.<br />Ignored fields:<ul><li>xc_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.xconnect'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.xconnect'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create xconnect
      tags:
      - devices
  /devices/xconnects/{xc_id}:
    delete:
      description: Delete xconnect
      operationId: delete-xconnect
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid xc_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete xconnect
      tags:
      - devices
    get:
      description: Get xconnect info
      operationId: get-xconnect
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.xconnect'
        "400":
          description: Invalid xc_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Xconnect not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get xconnect
      tags:
      - devices
    put:
      description: Update xconnect
      operationId: update-xconnect
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      - description: JSON object of xconnect.<br />Ignored fields:<ul><li>xc_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.xconnect'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.xconnect'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update xconnect
      tags:
      - devices
  /devices/xconnects/{xc_id}/device:
    get:
      description: Get xconnect device info
      operationId: get-xconnect-device
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid xc_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get xconnect device
      tags:
      - devices
  /devices/xconnects/{xc_id}/interface:
    get:
      description: Get xconnect interface info
      operationId: get-xconnect-interface
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid xc_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get xconnect interface
      tags:
      - devices
  /devices/xconnects/{xc_id}/peer_device:
    get:
      description: Get xconnect peer device info
      operationId: get-xconnect-peer-device
      parameters:
      - description: xc_id
        in: path
        name: xc_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid xc_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get xconnect peer device
      tags:
      - devices
  /devices/xconnects/count:
    get:
      description: Count number of xconnects
      operationId: count-xconnects
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count xconnects
      tags:
      - devices
  /entities:
    get:
      description: List entities info
      operationId: list-entities
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull'
        in: query
        name: sys_name_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: slot_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: model_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: w_product_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: hw_revision_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: serial_nr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: sw_product_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: sw_revision_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: manufacturer_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: physical_f
        type: boolean
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Entity'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List entities
      tags:
      - entities
    post:
      description: Create Entity
      operationId: create-Entity
      parameters:
      - description: JSON object of godevmandb.CreateEntityParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateEntityParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create Entity
      tags:
      - entities
  /entities/{ent_id}:
    delete:
      description: Delete Entity
      operationId: delete-Entity
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete Entity
      tags:
      - entities
    get:
      description: Get Entity info
      operationId: get-Entity
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Entity not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get Entity
      tags:
      - entities
    put:
      description: Update Entity
      operationId: update-Entity
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateEntityParams.<br />Ignored fields:<ul><li>ent_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateEntityParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update Entity
      tags:
      - entities
  /entities/{ent_id}/childs:
    get:
      description: List connection entity childs info
      operationId: list-entity-childs
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Entity'
            type: array
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List entity childs
      tags:
      - entities
  /entities/{ent_id}/device:
    get:
      description: Get entity device info
      operationId: get-entity-device
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get entity device
      tags:
      - entities
  /entities/{ent_id}/entity_phy_indexes:
    get:
      description: List connection entity phy indexes info
      operationId: list-entity-phy-indexes
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.EntityPhyIndex'
            type: array
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List entity phy indexes
      tags:
      - entities
  /entities/{ent_id}/interfaces:
    get:
      description: List connection entity interfaces info
      operationId: list-entity-interfaces
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List entity interfaces
      tags:
      - entities
  /entities/{ent_id}/parent:
    get:
      description: Get entity parent info
      operationId: get-entity-parent
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get entity parent
      tags:
      - entities
  /entities/{ent_id}/rl_nbrs:
    get:
      description: List connection entity rl_nbrs info
      operationId: list-entity-rl_nbrs
      parameters:
      - description: ent_id
        in: path
        name: ent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.RlNbr'
            type: array
        "400":
          description: Invalid ent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List entity rl_nbrs
      tags:
      - entities
  /entities/count:
    get:
      description: Count number of entities
      operationId: count-entities
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count entities
      tags:
      - entities
  /entities/custom_entities:
    get:
      description: List custom_entities info
      operationId: list-custom_entities
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: serial_nr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: manufacturer_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: part_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.CustomEntity'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List custom_entities
      tags:
      - entities
    post:
      description: Create customEntity
      operationId: create-customEntity
      parameters:
      - description: JSON object of godevmandb.CreateCustomEntityParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateCustomEntityParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.CustomEntity'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create customEntity
      tags:
      - entities
  /entities/custom_entities/{cent_id}:
    delete:
      description: Delete customEntity
      operationId: delete-customEntity
      parameters:
      - description: cent_id
        in: path
        name: cent_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid cent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete customEntity
      tags:
      - entities
    get:
      description: Get customEntity info
      operationId: get-customEntity
      parameters:
      - description: cent_id
        in: path
        name: cent_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.CustomEntity'
        "400":
          description: Invalid cent_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: CustomEntity not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get customEntity
      tags:
      - entities
    put:
      description: Update customEntity
      operationId: update-customEntity
      parameters:
      - description: cent_id
        in: path
        name: cent_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateCustomEntityParams.<br />Ignored
          fields:<ul><li>cent_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateCustomEntityParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.CustomEntity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update customEntity
      tags:
      - entities
  /entities/custom_entities/count:
    get:
      description: Count number of custom_entities
      operationId: count-custom_entities
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count custom_entities
      tags:
      - entities
  /interfaces:
    get:
      description: List interfaces info
      operationId: list-interfaces
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ifindex_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: alias_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: oper_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: adm_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: speed_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: minspeed_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: type_enum_f
        type: string
      - description: SQL '=' operator value (MAC address)
        in: query
        name: mac_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: monstatus_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: monerrors_f
        type: boolean
      - description: values 'true', 'false'
        in: query
        name: monload_f
        type: boolean
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interfaces
      tags:
      - interfaces
    post:
      description: Create interface
      operationId: create-interface
      parameters:
      - description: JSON object of iface.<br />Ignored fields:<ul><li>if_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.iface'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create interface
      tags:
      - interfaces
  /interfaces/{if_id}:
    delete:
      description: Delete interface
      operationId: delete-interface
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete interface
      tags:
      - interfaces
    get:
      description: Get interface info
      operationId: get-interface
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Interface not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface
      tags:
      - interfaces
    put:
      description: Update interface
      operationId: update-interface
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      - description: JSON object of iface.<br />Ignored fields:<ul><li>if_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.iface'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update interface
      tags:
      - interfaces
  /interfaces/{if_id}/bw_stats:
    get:
      description: List interface int_bw_stats info
      operationId: list-interface-int_bw_stats
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.IntBwStat'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interface bw_stats
      tags:
      - interfaces
  /interfaces/{if_id}/childs:
    get:
      description: List interface childs info
      operationId: list-interface-childs
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interface childs
      tags:
      - interfaces
  /interfaces/{if_id}/connection:
    get:
      description: Get interface connection info
      operationId: get-interface-connection
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Connection'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface connection
      tags:
      - interfaces
  /interfaces/{if_id}/device:
    get:
      description: Get interface device info
      operationId: get-interface-device
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface device
      tags:
      - interfaces
  /interfaces/{if_id}/entity:
    get:
      description: Get interface entity info
      operationId: get-interface-entity
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Entity'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface entity
      tags:
      - interfaces
  /interfaces/{if_id}/otn_if:
    get:
      description: Get interface otn_if info
      operationId: get-interface-otn_if
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface related otn interface
      tags:
      - interfaces
  /interfaces/{if_id}/parent:
    get:
      description: Get interface parent info
      operationId: get-interface-parent
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface parent
      tags:
      - interfaces
  /interfaces/{if_id}/related_higher:
    get:
      description: List higher related interfaces info
      operationId: list-interface-higher-related
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List higher related interfaces
      tags:
      - interfaces
  /interfaces/{if_id}/related_lower:
    get:
      description: List lower related interfaces info
      operationId: list-interface-lower-related
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.iface'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List lower related interfaces
      tags:
      - interfaces
  /interfaces/{if_id}/subinterfaces:
    get:
      description: List interface subinterfaces info
      operationId: list-interface-subinterfaces
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.subinterface'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interface subinterfaces
      tags:
      - interfaces
  /interfaces/{if_id}/vlans:
    get:
      description: List interface vlans info
      operationId: list-interface-vlans
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Vlan'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interface vlans
      tags:
      - interfaces
  /interfaces/{if_id}/xconnects:
    get:
      description: List interface xconnects info
      operationId: list-interface-xconnects
      parameters:
      - description: if_id
        in: path
        name: if_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.xconnect'
            type: array
        "400":
          description: Invalid if_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List interface xconnects
      tags:
      - interfaces
  /interfaces/bw_stats:
    get:
      description: List int bw stats info
      operationId: list-bw_stats
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: if_group_f
        type: string
      - description: SQL '<=' operator value
        in: query
        name: to50in_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to50in_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to75in_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to75in_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to90in_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to90in_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to100in_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to100in_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to50out_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to50out_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to75out_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to75out_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to90out_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to90out_ge
        type: integer
      - description: SQL '<=' operator value
        in: query
        name: to100out_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: to100out_ge
        type: integer
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.IntBwStat'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List int bw stats
      tags:
      - interfaces
    post:
      description: Create IntBwStat
      operationId: create-int_bw_stat
      parameters:
      - description: JSON object of godevmandb.CreateIntBwStatParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateIntBwStatParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.IntBwStat'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create IntBwStat
      tags:
      - interfaces
  /interfaces/bw_stats/{bw_id}:
    delete:
      description: Delete IntBwStat
      operationId: delete-int_bw_stat
      parameters:
      - description: bw_id
        in: path
        name: bw_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid bw_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete IntBwStat
      tags:
      - interfaces
    get:
      description: Get IntBwStat info
      operationId: get-int_bw_stat
      parameters:
      - description: bw_id
        in: path
        name: bw_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.IntBwStat'
        "400":
          description: Invalid bw_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Stat not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get IntBwStat
      tags:
      - interfaces
    put:
      description: Update IntBwStat
      operationId: update-int_bw_stat
      parameters:
      - description: bw_id
        in: path
        name: bw_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateIntBwStatParams.<br />Ignored
          fields:<ul><li>bw_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateIntBwStatParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.IntBwStat'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update IntBwStat
      tags:
      - interfaces
  /interfaces/bw_stats/{bw_id}/interface:
    get:
      description: Get bw_stats interface info
      operationId: get-bw_stats-interface
      parameters:
      - description: bw_id
        in: path
        name: bw_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid bw_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get bw_stats interface
      tags:
      - interfaces
  /interfaces/bw_stats/count:
    get:
      description: Count number of int bw stats
      operationId: count-bw_stats
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count int bw stats
      tags:
      - interfaces
  /interfaces/count:
    get:
      description: Count number of interfaces
      operationId: count-interfaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count interfaces
      tags:
      - interfaces
  /interfaces/subinterfaces:
    get:
      description: List subinterfaces info
      operationId: list-subinterfaces
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ifindex_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: alias_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: oper_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: adm_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: speed_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: type_enum_f
        type: string
      - description: url encoded SQL 'LIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: SQL '=' operator value (MAC address)
        in: query
        name: mac_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.subinterface'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List subinterfaces
      tags:
      - interfaces
    post:
      description: Create subinterface
      operationId: create-subinterface
      parameters:
      - description: JSON object of subinterface.<br />Ignored fields:<ul><li>sif_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.subinterface'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.subinterface'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create subinterface
      tags:
      - interfaces
  /interfaces/subinterfaces/{sif_id}:
    delete:
      description: Delete subinterface
      operationId: delete-subinterface
      parameters:
      - description: sif_id
        in: path
        name: sif_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid sif_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete subinterface
      tags:
      - interfaces
    get:
      description: Get subinterface info
      operationId: get-subinterface
      parameters:
      - description: sif_id
        in: path
        name: sif_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.subinterface'
        "400":
          description: Invalid sif_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Subinterface not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get interface
      tags:
      - interfaces
    put:
      description: Update subinterface
      operationId: update-subinterface
      parameters:
      - description: sif_id
        in: path
        name: sif_id
        required: true
        type: string
      - description: JSON object of subinterface.<br />Ignored fields:<ul><li>sif_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.subinterface'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.subinterface'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update subinterface
      tags:
      - interfaces
  /interfaces/subinterfaces/{sif_id}/interface:
    get:
      description: Get subinterface interface info
      operationId: get-subinterface-interface
      parameters:
      - description: sif_id
        in: path
        name: sif_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.iface'
        "400":
          description: Invalid sif_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get subinterface interface
      tags:
      - interfaces
  /interfaces/subinterfaces/count:
    get:
      description: Count number of subinterfaces
      operationId: count-subinterfaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count subinterfaces
      tags:
      - interfaces
  /ip_interfaces:
    get:
      description: List ip_interfaces info
      operationId: list-ip_interfaces
      parameters:
      - description: url encoded SQL 'LIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: ifindex_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isnull',
          'isempty'
        in: query
        name: alias_f
        type: string
      - description: ip or containing net in CIDR notation
        in: query
        name: ip_addr_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ipInterface'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List ip_interfaces
      tags:
      - ip_interfaces
    post:
      description: Create ip_interface
      operationId: create-ip_interface
      parameters:
      - description: JSON object of ipInterface.<br />Ignored fields:<ul><li>ip_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.ipInterface'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ipInterface'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create ip_interface
      tags:
      - ip_interfaces
  /ip_interfaces/{ip_id}:
    delete:
      description: Delete ip_interface
      operationId: delete-ip_interface
      parameters:
      - description: ip_id
        in: path
        name: ip_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ip_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete ip_interface
      tags:
      - ip_interfaces
    get:
      description: Get ip_interface info
      operationId: get-ip_interface
      parameters:
      - description: ip_id
        in: path
        name: ip_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ipInterface'
        "400":
          description: Invalid ip_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: IpInterface not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get ip_interface
      tags:
      - ip_interfaces
    put:
      description: Update ip_interface
      operationId: update-ip_interface
      parameters:
      - description: ip_id
        in: path
        name: ip_id
        required: true
        type: string
      - description: JSON object of ipInterface.<br />Ignored fields:<ul><li>ip_id</li><li>updated_on</li><li>created_on</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.ipInterface'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ipInterface'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update ip_interface
      tags:
      - ip_interfaces
  /ip_interfaces/{ip_id}/device:
    get:
      description: Get ip_interface device info
      operationId: get-ip_interface-device
      parameters:
      - description: ip_id
        in: path
        name: ip_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.device'
        "400":
          description: Invalid ip_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get ip_interface device
      tags:
      - ip_interfaces
  /ip_interfaces/count:
    get:
      description: Count number of ip_interfaces
      operationId: count-ip_interfaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count ip_interfaces
      tags:
      - ip_interfaces
  /sites:
    get:
      description: List site info
      operationId: list-sites
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern + special value 'isempty'
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: uident_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: area_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: addr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ext_name_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: ext_id_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Site'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List sites
      tags:
      - sites
    post:
      description: Create site
      operationId: create-site
      parameters:
      - description: JSON object of godevmandb.CreateSiteParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateSiteParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Site'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create site
      tags:
      - sites
  /sites/{site_id}:
    delete:
      description: Delete site
      operationId: delete-site
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid site_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete site
      tags:
      - sites
    get:
      description: Get site info
      operationId: get-site
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Site'
        "400":
          description: Invalid site_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Site not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get site
      tags:
      - sites
    put:
      description: Update site
      operationId: update-site
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateSiteParams.<br />Ignored fields:<ul><li>site_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateSiteParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Site'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update site
      tags:
      - sites
  /sites/{site_id}/connections:
    get:
      description: List site connections info
      operationId: list-site-connections
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Connection'
            type: array
        "400":
          description: Invalid site_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List site connections
      tags:
      - sites
  /sites/{site_id}/country:
    get:
      description: Get site country info
      operationId: get-site-country
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Country'
        "400":
          description: Invalid site_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get site country
      tags:
      - sites
  /sites/{site_id}/devices:
    get:
      description: List site devices info
      operationId: list-site-devices
      parameters:
      - description: site_id
        in: path
        name: site_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.device'
            type: array
        "400":
          description: Invalid site_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List site devices
      tags:
      - sites
  /sites/count:
    get:
      description: Count number of sites
      operationId: count-sites
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count sites
      tags:
      - sites
  /sites/countries:
    get:
      description: List countries info
      operationId: list-countries
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: descr_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: code_f
        type: string
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Country'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List countries
      tags:
      - sites
    post:
      description: Create country
      operationId: create-country
      parameters:
      - description: JSON object of godevmandb.CreateCountryParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateCountryParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.Country'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create country
      tags:
      - sites
  /sites/countries/{country_id}:
    delete:
      description: Delete country
      operationId: delete-country
      parameters:
      - description: country_id
        in: path
        name: country_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid country_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete country
      tags:
      - sites
    get:
      description: Get country info
      operationId: get-country
      parameters:
      - description: country_id
        in: path
        name: country_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Country'
        "400":
          description: Invalid country_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get country
      tags:
      - sites
    put:
      description: Update country
      operationId: update-country
      parameters:
      - description: country_id
        in: path
        name: country_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateCountryParams.<br />Ignored fields:<ul><li>country_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateCountryParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.Country'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update country
      tags:
      - sites
  /sites/countries/{country_id}/sites:
    get:
      description: List country sites info
      operationId: list-country-sites
      parameters:
      - description: country_id
        in: path
        name: country_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.Site'
            type: array
        "400":
          description: Invalid country_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List country sites
      tags:
      - sites
  /sites/countries/count:
    get:
      description: Count number of countries
      operationId: count-countries
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count countries
      tags:
      - sites
  /users:
    get:
      description: List users info
      operationId: list-users
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: username_f
        type: string
      - description: url encoded SQL 'ILIKE' operator pattern + special values 'isnull',
          'isempty'
        in: query
        name: notes_f
        type: string
      - description: SQL '<=' operator value
        in: query
        name: userlevel_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: userlevel_ge
        type: integer
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.User'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List users
      tags:
      - users
    post:
      description: Create user
      operationId: create-user
      parameters:
      - description: JSON object of godevmandb.CreateUserParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateUserParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.User'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create user
      tags:
      - users
  /users/{username}:
    delete:
      description: Delete user
      operationId: delete-user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid username
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete user
      tags:
      - users
    get:
      description: Get user info
      operationId: get-user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.User'
        "400":
          description: Invalid username
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get user
      tags:
      - users
    put:
      description: Update user
      operationId: update-user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateUserParams.<br />Ignored fields:<ul><li>username</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateUserParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update user
      tags:
      - users
  /users/{username}/authzs:
    get:
      description: List user authzs info
      operationId: list-user-authzs
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.UserAuthz'
            type: array
        "400":
          description: Invalid username
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List user authzs
      tags:
      - users
  /users/{username}/graphs:
    get:
      description: List user graphs info
      operationId: list-user-graphs
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.UserGraph'
            type: array
        "400":
          description: Invalid username
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List user graphs
      tags:
      - users
  /users/authzs:
    get:
      description: List user_authzs info
      operationId: list-user_authzs
      parameters:
      - description: url encoded SQL 'ILIKE' operator pattern
        in: query
        name: username_f
        type: string
      - description: SQL '<=' operator value
        in: query
        name: userlevel_le
        type: integer
      - description: SQL '>=' operator value
        in: query
        name: userlevel_ge
        type: integer
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.UserAuthz'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List user_authzs
      tags:
      - users
    post:
      description: Create user_authz
      operationId: create-user_authz
      parameters:
      - description: JSON object of godevmandb.CreateUserAuthzParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateUserAuthzParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.UserAuthz'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create user_authz
      tags:
      - users
  /users/authzs/{username}/{dom_id}:
    delete:
      description: Delete user_authz
      operationId: delete-user_authz
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid username/dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete user_authz
      tags:
      - users
    get:
      description: Get user_authz info
      operationId: get-user_authz
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.UserAuthz'
        "400":
          description: Invalid username/dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: UserAuthz not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get user_authz
      tags:
      - users
    put:
      description: Update user_authz
      operationId: update-user_authz
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateUserAuthzParams.<br />Ignored
          fields:<ul><li>username</li><li>dom_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateUserAuthzParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.UserAuthz'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update user_authz
      tags:
      - users
  /users/authzs/{username}/{dom_id}/device_domain:
    get:
      description: Get user_authz device_domain info
      operationId: get-user_authz-device-domain
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: dom_id
        in: path
        name: dom_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.DeviceDomain'
        "400":
          description: Invalid username/dom_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get user_authz device_domain
      tags:
      - users
  /users/authzs/count:
    get:
      description: Count number of user_authzs
      operationId: count-user_authzs
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count user_authzs
      tags:
      - users
  /users/count:
    get:
      description: Count number of users
      operationId: count-users
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count users
      tags:
      - users
  /users/graphs:
    get:
      description: List user graphs info
      operationId: list-user_graphs
      parameters:
      - description: url encoded SQL '=' operator pattern
        in: query
        name: username_f
        type: string
      - description: url encoded SQL '=' operator pattern
        in: query
        name: descr_f
        type: string
      - description: values 'true', 'false'
        in: query
        name: shared_f
        type: boolean
      - description: 'min: 1; max: 1000; default: 100'
        in: query
        name: limit
        type: integer
      - description: 'default: 0'
        in: query
        name: offset
        type: integer
      - description: record update time >= (unix timestamp in milliseconds)
        in: query
        name: updated_ge
        type: integer
      - description: record update time <= (unix timestamp in milliseconds)
        in: query
        name: updated_le
        type: integer
      - description: record creation time >= (unix timestamp in milliseconds)
        in: query
        name: created_ge
        type: integer
      - description: record creation time <= (unix timestamp in milliseconds)
        in: query
        name: created_le
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/godevmandb.UserGraph'
            type: array
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: List user_graphs
      tags:
      - users
    post:
      description: Create user graph
      operationId: create-user_graph
      parameters:
      - description: JSON object of godevmandb.CreateUserGraphParams
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.CreateUserGraphParams'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/godevmandb.UserGraph'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Create user_graph
      tags:
      - users
  /users/graphs/{graph_id}:
    delete:
      description: Delete user graph
      operationId: delete-user_graph
      parameters:
      - description: graph_id
        in: path
        name: graph_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid graph_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Delete user_graph
      tags:
      - users
    get:
      description: Get user graph info
      operationId: get-user_graph
      parameters:
      - description: graph_id
        in: path
        name: graph_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.UserGraph'
        "400":
          description: Invalid graph_id
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Graph not found
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Get user_graph
      tags:
      - users
    put:
      description: Update user graph
      operationId: update-user_graph
      parameters:
      - description: graph_id
        in: path
        name: graph_id
        required: true
        type: string
      - description: JSON object of godevmandb.UpdateUserGraphParams.<br />Ignored
          fields:<ul><li>graph_id</li></ul>
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/godevmandb.UpdateUserGraphParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/godevmandb.UserGraph'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Update user_graph
      tags:
      - users
  /users/graphs/count:
    get:
      description: Count number of user graphs
      operationId: count-user_graphs
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "500":
          description: Failed DB transaction
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Count user_graphs
      tags:
      - users
  /version:
    get:
      description: Return API version info
      operationId: version
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "404":
          description: Invalid route error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
        "405":
          description: Invalid method error
          schema:
            $ref: '#/definitions/handlers.StatusResponse'
      summary: Version
      tags:
      - information
swagger: "2.0"
